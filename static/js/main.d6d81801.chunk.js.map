{"version":3,"sources":["pages/app/app.styles.jsx","components/side-panel/side-panel.styles.jsx","firebase/firebase.utils.js","redux/user/user.selectors.js","redux/user/user.types.js","redux/user/user.actions.js","redux/theme/theme.types.js","redux/theme/theme.selectors.js","components/user-status-card/user-status-card.styles.jsx","components/change-avatar-modal/change-avatar-modal.styles.jsx","components/change-avatar-modal/change-avatar-modal.component.jsx","components/user-status-card/user-status-card.component.jsx","redux/theme/theme.actions.js","redux/chat/chat.types.js","redux/chat/chat.actions.js","redux/chat/chat.selectors.js","components/starred/starred.styles.jsx","components/starred/starred.component.jsx","components/add-channel-modal/add-channel-modal.styles.jsx","components/add-channel-modal/add-channel-modal.component.jsx","components/spinner/spinner.styles.jsx","components/spinner/spinner.component.jsx","components/channels/channels.styles.jsx","components/channels/channels.component.jsx","components/direct-messages/direct-messages.styles.jsx","components/direct-messages/direct-messages.component.jsx","components/side-panel/side-panel.component.jsx","components/messages-panel/messages-panel.styles.jsx","components/channel-header/channel-header.styles.jsx","components/channel-header/channel-header.component.jsx","components/messages/messages.styles.jsx","components/message/message.styles.jsx","components/message/message.component.jsx","components/typing-users/typing-users.styles.jsx","components/typing-users/typing-users.component.jsx","components/messages/messages.component.jsx","components/file-upload-modal/file-upload-modal.styles.jsx","components/file-upload-modal/file-upload-modal.component.jsx","components/message-input/message-input.styles.jsx","components/message-input/message-input.component.jsx","components/messages-panel/messages-panel.component.jsx","components/meta-panel/meta-panel.styles.jsx","components/meta-panel/meta-panel.component.jsx","pages/app/app.component.jsx","serviceWorker.js","components/custom-theme-provider/custom-theme-provider.component.jsx","pages/register/register.styles.jsx","components/custom-button/custom-button.styles.jsx","components/custom-button/custom-button.component.jsx","components/custom-input/custom-input.styles.jsx","components/custom-input/custom-input.component.jsx","components/form-error/form.error.styles.jsx","components/form-error/form-error.component.jsx","components/custom-link/custom-link.styles.jsx","components/custom-link/custom-link.component.jsx","resources/images/avatar.blob.js","pages/register/register.component.jsx","pages/login/login.styles.jsx","pages/login/login.component.jsx","redux/theme/theme.data.js","redux/theme/theme.reducer.js","redux/user/user.reducer.js","redux/chat/chat.reducer.js","redux/root.reducer.js","redux/chat/chat.utils.js","redux/chat/chat.sagas.js","redux/root.saga.js","redux/store.js","index.js"],"names":["AppContainer","styled","div","theme","bg","SidePanelContainer","sidePanel","shadow","sidebarShowing","CloseSidebar","closeButton","text","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","firestore","database","storage","selectUser","state","user","selectCurrentUser","createSelector","currentUser","selectUserIsLoading","isLoading","selectUserStatus","status","UserActionTypes","SET_CURRENT_USER","CLEAR_CURRENT_USER","SET_USER_IS_LOADING","SET_USER_STATUS","SET_STARRED_CHANNELS","setCurrentUser","type","payload","ThemeActionTypes","SET_THEME","selectCurrentTheme","currentTheme","UserAndOptionsContainer","userStatusCard","opened","UserStatusCardContainer","UserAvatar","UserInfo","Username","p","UserStatus","subText","Indicator","statusColors","online","away","offline","OptionsToggle","Line","hr","icon","Options","ul","optionBg","Dots","Dot","Circle","name","opacityAnimation","css","modal","showing","scaleAnimation","AvatarModalContainer","Modal","form","modalBg","Heading","h2","textPrimary","Editor","Inputs","Input","textSecondary","Button","button","ChangeAvatarModal","avatarImage","avatarImageData","scale","handlePropogation","event","stopPropagation","handleSubmit","preventDefault","confirm","props","avatarEditor","getImageScaledToCanvas","toBlob","avatarBlob","handleChange","files","target","file","length","reader","FileReader","readAsDataURL","addEventListener","setState","result","setScale","value","setEditorRef","editor","this","close","onClick","onSubmit","ref","image","onImageChange","onImageCrop","min","max","onChange","htmlFor","id","accept","className","React","Component","ArrowSVG","useTheme","xmlns","viewBox","fill","d","mapStateToProps","createStructuredSelector","connect","dispatch","setUserStatus","setTheme","themeName","useState","setOpened","statusBox","setStatusBox","showModal","handleStatusChange","child","uid","set","err","console","error","uploadCroppedImage","imageBlob","put","contentType","then","snapshot","getDownloadURL","url","window","location","reload","displayName","photoURL","src","alt","color","signOut","x","log","ChatActionTypes","SET_CHANNELS","SET_CURRENT_CHANNEL","UPDATE_CHANNEL_MEMBERS","SET_MESSAGE_SEARCH_FILTERS","SET_PRIVATE_CHANNEL","SET_OTHER_USERS_STATUS","TOGGLE_SIDEBAR","TOGGLE_META","setChannels","channels","setCurrentChannel","channel","setPrivateChannel","isPrivate","toggleSidebar","boolean","toggleMeta","selectChat","chat","selectChannels","selectCurrentChannel","currentChannel","selectChannelMembers","channelMembers","selectMessageSearchFilters","messageSearchFilters","selectIsPrivateChannel","isPrivateChannel","selectOtherUsersStatus","otherUsersStatus","selectSidebarShowing","starredChannels","selectMetaShowing","metaShowing","StarredContainer","starred","StarredHeading","StarredList","StarredItem","li","selected","hover","PlaceholderText","Starred","setActiveChannel","activeChannel","changeChannel","getStarredChannels","filter","openModal","style","alignSelf","size","key","map","ModalContainer","AddChannelModal","about","formattedValue","replace","toLowerCase","startsWith","endsWith","substring","placeholder","SpinnerContainer","spinner","Loader","loaderFg","loaderBg","LoadingText","fontSize","Spinner","loadingText","ChannelsContainer","ChannelsHeading","ChannelsList","ChannelItem","Name","Notifications","span","notificationsBg","notificationsFg","Channels","channelName","channelDetails","channelsRef","collection","typingRef","unsubscribeChannelListener","notificationListeners","notifications","firstLoad","addListeners","unsubscribe","orderBy","onSnapshot","docs","doc","data","forEach","addNotificationListener","channelId","listener","handleNotifications","currentChannelId","lastTotal","index","findIndex","notification","lastKnownTotal","count","total","push","removeListeners","Object","keys","setFirstChannel","addChannel","newChannel","details","createdBy","avatar","createdAt","FieldValue","serverTimestamp","catch","handleClose","handleConfirm","remove","clearNotifications","updatedNotifications","getNotificationCount","backgroundColor","marginTop","DirectMessagesContainer","directMessages","DirectMessagesHeading","DirectMessagesList","DirectMessagesItem","User","Status","DirectMessages","users","usersListener","connectedRef","presenceRef","currentUserUid","userStatus","usersWithDetails","updateUsersStatus","on","val","onDisconnect","off","setOtherUsersStatus","usersPrescence","userId","addStatusToUser","updatedUsers","reduce","acc","concat","getChannelId","currentUserId","usersStatus","MessagesPanelContainer","ChannelHeaderContainer","channelHeader","ChannelInfo","SidebarButton","search","sidebarIcon","starIcon","About","Members","SearchFieldContainer","Search","SearchInput","input","InfoToggle","infoIcon","ChannelHeader","filters","usersRef","setFilters","unsubscribeStarredListener","setMessageSearchFilters","clearText","getStatusForDM","handleStar","starChannel","get","indexOf","splice","update","setStarredChannels","members","privateChannel","gridColumn","scrollbar","fg","fgHover","MessagesContainer","messages","Container","TypingContainer","EmptyPlaceholder","MessageContainer","Avatar","MessageInfo","message","Content","Message","content","timestamp","moment","toDate","fromNow","timeFromNow","TypingUsersContainer","typingUsers","itemBg","TypingUsers","typing","getTypingUsers","animationDelay","Messages","messageListeners","loading","scrollToBottom","messagesEnd","scrollIntoView","filterMessages","regex","RegExp","match","channelType","updateMembers","countUniqueMembers","getDetailsForMembers","messageListener","channelMessages","displayMessages","i","ownMessage","uniqueMembers","includes","messagesCount","sort","prev","next","node","updateChannelMembers","FileModalContainer","FileUploadModal","iconCSS","EmojiPickerContainer","MessageInputContainer","InputField","messageInput","outline","AttachIcon","attachFg","EmojiIcon","emojiBg","SendIcon","sendBg","sendFg","ProgressBar","progress","EmojiPicker","Picker","MessageInput","storageRef","uploadeState","uploadTask","percentUploaded","errors","emojiPicker","sendMessage","getMessageRef","messageRef","createMessage","directMessagesRef","uploadeFile","fileUrl","createdMessage","getPath","pathToUpload","filePath","uuidv4","uploadState","snap","Math","round","bytesTransferred","totalBytes","downloadUrl","sendFileMessage","handleKeyDown","handleTogglePicker","colonsToUnicode","emoji","emojiIndex","emojis","unicode","native","handleAddEmoji","newMessage","colons","messageInputRef","focus","cancel","title","onSelect","width","themeObj","required","onKeyDown","autocomplete","disabled","role","aria-label","mapStatToProps","MetaPanelContainer","meta","Meta","CloseMeta","CreatedBy","CreatedOn","ActiveMembers","Member","Info","format","App","Boolean","hostname","children","RegisterPageContainer","RegisterFormContainer","h1","headingText","RegisterForm","LoginMessageContainer","bgDisabled","height","padding","CustomButton","errorStyles","InputContainer","field","Icon","focusBorder","InputIconContainer","CustomInput","iconSize","FormErrorContainer","Error","FormError","Link","RouterLink","link","CustomLink","blobFromBase64String","base64String","byteArray","Uint8Array","from","atob","split","char","charCodeAt","Blob","RegisterPage","username","email","password","confirmPassword","isFormValid","isFormEmpty","isPasswordValid","createUserWithEmailAndPassword","a","createdUser","avatarURL","getAvatarUrl","updateProfile","saveUser","finally","Promise","resolve","reject","inputName","some","FaUserAlt","MdEmail","handleInputError","FaLock","to","LoginPageContainer","LoginFormContainer","LoginForm","RegisterMessageContainer","LoginPage","signInWithEmailAndPassword","signedInUser","colors","red","littleLightRed","lightRed","green","pastelGreen","lightGreen","blue","lightBlue","gray","littleLightGray","littleLighterGray","lightGray","veryLightGray","black","littleDarkerBlack","darkerBlack","white","lightWhite","veryLightWhite","lightest","yellow","lightYellow","light","dot","errorBg","buttonPrimary","buttonSeconday","dark","littleWhite","INITIAL_STATE","themes","themeReducer","action","userReducer","chatReducer","toggled","undefined","rootReducer","combineReducers","getChannelsWithStarred","updateChannelsAfterStarred","onSetCurrentChannel","chatSagas","select","channelsWithStarred","takeLatest","all","call","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","composeWithDevTools","applyMiddleware","run","Root","unsubscribeFromAuth","history","clearCurrentUser","onAuthStateChanged","exact","path","component","RootWithRouter","withRouter","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6d81801.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const AppContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  /* display: grid; */\n  /* grid-template-columns: minmax(260px, 25%) auto 25%; */\n  display: flex;\n  background-color: ${({ theme }) => theme.bg};\n\n  @media only screen and (max-width: 1100px) {\n    /* grid-template-columns: minmax(260px, 25%) 1fr auto; */\n    display: flex;\n  }\n\n  @media only screen and (max-width: 768px) {\n    display: flex;\n  }\n`\n","import styled from 'styled-components'\n\nexport const SidePanelContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  max-width: 280px;\n  background-color: ${({ theme }) => theme.sidePanel.bg};\n  padding: 14px;\n\n  > :nth-child(n) {\n    margin-bottom: 16px;\n  }\n\n  > :last-child {\n    margin-bottom: 0px;\n  }\n\n  transition: ease-in-out transform 200ms;\n\n  @media only screen and (max-width: 768px) {\n    position: fixed;\n    z-index: 10;\n    top: 0;\n    left: 0;\n    width: 280px;\n    box-shadow: 0px 0px 10px 5px ${({ theme }) => theme.sidePanel.shadow};\n    transform: ${({ sidebarShowing }) =>\n      sidebarShowing ? 'translateX(0px)' : 'translateX(-300px)'};\n  }\n`\n\nexport const CloseSidebar = styled.div`\n  color: ${({ theme }) => theme.sidePanel.closeButton.text};\n  background-color: ${({ theme }) => theme.sidePanel.closeButton.bg};\n  font-family: 'archiabold';\n  padding: 8px;\n  border-radius: 14px;\n  display: flex;\n  align-items: center;\n\n  span {\n    margin-left: 8px;\n  }\n\n  cursor: pointer;\n\n  @media only screen and (min-width: 768px) {\n    display: none;\n  }\n`\n","import firebase from 'firebase/app'\nimport 'firebase/analytics'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/storage'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBKsHwiG5NuXxuvSN-7jZZLMDqqUDpIlbA',\n  authDomain: 'chat-react-app-9357c.firebaseapp.com',\n  databaseURL: 'https://chat-react-app-9357c.firebaseio.com',\n  projectId: 'chat-react-app-9357c',\n  storageBucket: 'chat-react-app-9357c.appspot.com',\n  messagingSenderId: '700067181378',\n  appId: '1:700067181378:web:a3b7eeb1503a2e1a728edb',\n  measurementId: 'G-NJ947Z6DGB'\n}\n\nfirebase.initializeApp(firebaseConfig)\nfirebase.analytics()\n\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\nexport const database = firebase.database()\nexport const storage = firebase.storage()\n\nexport default firebase\n","import { createSelector } from 'reselect'\n\nconst selectUser = state => state.user\n\nexport const selectCurrentUser = createSelector(\n  [selectUser],\n  user => user.currentUser\n)\n\nexport const selectUserIsLoading = createSelector(\n  [selectUser],\n  user => user.isLoading\n)\n\nexport const selectUserStatus = createSelector(\n  [selectUser],\n  user => user.status\n)\n","const UserActionTypes = {\n  SET_CURRENT_USER: 'SET_CURRENT_USER',\n  CLEAR_CURRENT_USER: 'CLEAR_CURRENT_USER',\n  SET_USER_IS_LOADING: 'SET_USER_IS_LOADING',\n  SET_USER_STATUS: 'SET_USER_STATUS',\n  SET_STARRED_CHANNELS: 'SET_STARRED_CHANNELS'\n}\n\nexport default UserActionTypes\n","import UserActionTypes from './user.types'\n\nexport const setCurrentUser = user => ({\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user\n})\n\nexport const setUserIsLoading = loading => ({\n  type: UserActionTypes.SET_USER_IS_LOADING,\n  payload: loading\n})\n\nexport const clearCurrentUser = () => ({\n  type: UserActionTypes.CLEAR_CURRENT_USER\n})\n\nexport const setUserStatus = status => ({\n  type: UserActionTypes.SET_USER_STATUS,\n  payload: status\n})\n","const ThemeActionTypes = {\n  SET_THEME: 'SET_THEME'\n}\n\nexport default ThemeActionTypes\n","import { createSelector } from 'reselect'\n\nconst selectTheme = state => state.theme\n\nexport const selectCurrentTheme = createSelector(\n  [selectTheme],\n  theme => theme.currentTheme\n)\n","import styled from 'styled-components'\n\nexport const UserAndOptionsContainer = styled.div`\n  width: 100%;\n  height: 76px;\n  border-radius: 14px;\n  background-color: ${({ theme }) => theme.userStatusCard.bg};\n  transition: ease max-height 0.4s;\n  position: relative;\n  /* max-height: ${({ opened }) => (opened ? '76px' : '200px')}; */\n`\n\nexport const UserStatusCardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 52px auto 20px;\n  padding: 12px;\n`\n\nexport const UserAvatar = styled.div`\n  width: 52px;\n  height: 52px;\n  border: 8px;\n  border-radius: 12px;\n  background-color: white;\n  overflow: hidden;\n`\n\nexport const UserInfo = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0px 10px;\n  width: 100%;\n  overflow: hidden;\n  white-space: nowrap;\n`\n\nexport const Username = styled.p`\n  color: ${({ theme }) => theme.userStatusCard.text};\n  font-family: 'archiasemibold';\n  font-size: 16px;\n  margin-bottom: 4px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const UserStatus = styled.div`\n  display: flex;\n  align-items: center;\n\n  span {\n    color: ${({ theme }) => theme.userStatusCard.subText};\n    font-family: 'archiaregular';\n    text-transform: capitalize;\n    margin-left: 5px;\n    font-size: 13px;\n  }\n`\n\nexport const Indicator = styled.div`\n  height: 12px;\n  width: 12px;\n  margin: auto 0px;\n  border-radius: 9999px;\n  background-color: ${({\n    theme: {\n      userStatusCard: { statusColors }\n    },\n    status\n  }) => {\n    if (status === 'online') return statusColors.online\n    else if (status === 'away') return statusColors.away\n    else return statusColors.offline\n  }};\n`\n\nexport const OptionsToggle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  svg {\n    width: 16px;\n    cursor: pointer;\n    transition: ease transform 0.2s;\n    transform: ${({ opened }) => (opened ? 'rotate(180deg)' : 'rotate(0deg)')};\n  }\n`\n\nexport const Line = styled.hr`\n  margin-top: 12px;\n  height: 1px;\n  background-color: ${({ theme }) => theme.userStatusCard.icon};\n  border: none;\n`\n\nexport const Options = styled.ul`\n  max-height: ${({ opened }) => (opened ? '180px' : '0px')};\n  width: 100%;\n  background-color: ${({ theme }) => theme.userStatusCard.bg};\n  position: absolute;\n  z-index: 2;\n  top: 64px;\n  border-radius: 0px 0px 14px 14px;\n  transition: ease max-height 0.3s;\n  overflow: hidden;\n  padding: 0px 12px;\n\n  li {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    padding: 8px;\n    margin-bottom: 3px;\n\n    :last-child {\n      border-radius: 0px 0px 6px 6px;\n      margin-bottom: 15px;\n    }\n\n    span {\n      color: ${({ theme }) => theme.userStatusCard.subText};\n      font-family: 'archiaregular';\n      font-size: 14px;\n      margin-left: 6px;\n    }\n\n    &:hover {\n      background-color: ${({ theme }) => theme.userStatusCard.optionBg};\n    }\n\n    &.status-box {\n      padding: 0px;\n\n      &:hover {\n        background-color: transparent;\n      }\n    }\n  }\n`\n\nexport const Dots = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-gap: 6px;\n  grid-template-columns: repeat(3, 1fr);\n`\n\nexport const Dot = styled.div`\n  background-color: ${({ theme }) => theme.userStatusCard.icon};\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  border-radius: 6px;\n  justify-content: center;\n`\n\nexport const Circle = styled.div`\n  height: 12px;\n  width: 12px;\n  border-radius: 14px;\n  background-color: ${({ theme, name }) => {\n    if (name === 'online') return theme.userStatusCard.statusColors.online\n    else if (name === 'offline')\n      return theme.userStatusCard.statusColors.offline\n    else return theme.userStatusCard.statusColors.away\n  }};\n`\n","import styled, { css } from 'styled-components'\n\nconst opacityAnimation = css`\n  @keyframes opacityIn {\n    from {\n      background-color: transparent;\n    }\n    to {\n      visibility: visible;\n      background-color: ${({ theme }) => theme.userStatusCard.modal.bg};\n    }\n  }\n\n  @keyframes opacityOut {\n    from {\n      background-color: ${({ theme }) => theme.userStatusCard.modal.bg};\n      /* at start showing is false so in \n      order to avoit flicker issue visibility is set dynamically */\n      visibility: ${({ showing }) => (showing ? 'visible' : 'hidden')};\n    }\n    to {\n      visibility: hidden;\n      background-color: transparent;\n    }\n  }\n\n  animation-name: ${({ showing }) => (showing ? 'opacityIn' : 'opacityOut')};\n  animation-duration: 500ms;\n  animation-timing-function: ease-in-out;\n  animation-fill-mode: forwards;\n`\n\nconst scaleAnimation = css`\n  @keyframes scaleIn {\n    from {\n      opacity: 0;\n      transform: scale(0.5);\n    }\n    to {\n      visibility: visible;\n      opacity: 1;\n      transform: scale(1);\n    }\n  }\n\n  @keyframes scaleOut {\n    from {\n      visibility: ${({ showing }) => (showing ? 'visible' : 'hidden')};\n    }\n    to {\n      visibility: hidden;\n      opacity: 0;\n    }\n  }\n\n  animation-name: ${({ showing }) => (showing ? 'scaleIn' : 'scaleOut')};\n  animation-duration: 500ms;\n  animation-timing-function: cubic-bezier(0.19, 0.67, 0.01, 1.3);\n  animation-fill-mode: forwards;\n`\n\nexport const AvatarModalContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  position: fixed;\n  z-index: 10;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  visibility: hidden;\n\n  ${opacityAnimation}\n`\n\nexport const Modal = styled.form`\n  padding: 20px;\n  border-radius: 12px;\n  visibility: hidden;\n  background: ${({ theme }) => theme.userStatusCard.modal.modalBg};\n  display: grid;\n  grid-gap: 16px;\n\n  ${scaleAnimation}\n`\n\nexport const Heading = styled.h2`\n  color: ${({ theme }) => theme.userStatusCard.modal.textPrimary};\n  font-size: 20px;\n  font-family: 'archiasemibold';\n`\n\nexport const Editor = styled.div`\n  display: grid;\n  grid-template-rows: auto 30px;\n  justify-content: center;\n  align-items: center;\n\n  input {\n    margin-top: 10px;\n    -webkit-appearance: none;\n    appearance: none;\n    width: 100%;\n    height: 8px;\n    background-color: ${({ theme }) => theme.userStatusCard.modal.bg};\n    outline: none;\n\n    &::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      appearance: none;\n      width: 14px;\n      height: 14px;\n      border-radius: 10px;\n      background-color: ${({ theme }) =>\n        theme.userStatusCard.modal.textPrimary};\n      cursor: pointer;\n    }\n  }\n`\n\nexport const Inputs = styled.div`\n  display: grid;\n  grid-gap: 10px;\n`\n\nexport const Input = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: auto 80px 0px;\n\n  label {\n    font-family: 'archiasemibold';\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 6px 12px;\n    font-size: 16px;\n    height: 100%;\n    width: 100%;\n    cursor: pointer;\n    border-radius: 0px 8px 8px 0px;\n    color: ${({ theme }) => theme.userStatusCard.modal.textSecondary};\n    background-color: ${({ theme }) => theme.userStatusCard.modal.textPrimary};\n  }\n\n  span {\n    min-width: 160px;\n    padding: 8px;\n    border: 0px;\n    background-color: ${({ theme }) => theme.userStatusCard.modal.bg};\n    color: ${({ theme }) => theme.userStatusCard.modal.textPrimary};\n    border-radius: 8px;\n    font-family: 'archiaregular';\n    font-size: 16px;\n  }\n\n  input {\n    width: 0.1px;\n    height: 0.1px;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    z-index: -1;\n\n    &:focus {\n      outline: none;\n    }\n\n    &::placeholder {\n      color: ${({ theme }) => theme.userStatusCard.modal.textPrimary};\n    }\n  }\n`\n\nexport const Options = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding-top: 10px;\n`\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  border: 2px solid transparent;\n  font-family: 'archiasemibold';\n  cursor: pointer;\n  outline: none;\n  border-radius: 8px;\n  padding: 6px;\n  min-width: 70px;\n  font-size: 15px;\n\n  &.close {\n    color: ${({ theme }) => theme.userStatusCard.modal.textPrimary};\n    background-color: ${({ theme }) =>\n      theme.userStatusCard.modal.textSecondary};\n    border: 2px solid ${({ theme }) => theme.userStatusCard.modal.textPrimary};\n  }\n\n  &.confirm {\n    color: ${({ theme }) => theme.userStatusCard.modal.textSecondary};\n    background-color: ${({ theme }) => theme.userStatusCard.modal.textPrimary};\n  }\n`\n","import React from 'react'\nimport AvatarEditor from 'react-avatar-editor'\n\nimport {\n  AvatarModalContainer,\n  Modal,\n  Heading,\n  Inputs,\n  Input,\n  Options,\n  Button,\n  Editor\n} from './change-avatar-modal.styles'\n\nclass ChangeAvatarModal extends React.Component {\n  state = {\n    avatarImage: null,\n    avatarImageData: null,\n    scale: 120\n  }\n\n  handlePropogation = event => {\n    event.stopPropagation()\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    const { confirm } = this.props\n\n    if (this.avatarEditor) {\n      this.avatarEditor.getImageScaledToCanvas().toBlob(avatarBlob => {\n        confirm(avatarBlob)\n      })\n    }\n  }\n\n  handleChange = event => {\n    const files = event.target.files\n    const file = files && files.length ? files[0] : null\n    const reader = new FileReader()\n\n    if (file) {\n      reader.readAsDataURL(file)\n      reader.addEventListener('load', () => {\n        this.setState({\n          avatarImage: file,\n          avatarImageData: reader.result\n        })\n      })\n    }\n  }\n\n  setScale = event => {\n    const { value } = event.target\n\n    this.setState({\n      scale: value\n    })\n  }\n\n  setEditorRef = editor => (this.avatarEditor = editor)\n\n  render() {\n    const { avatarImage, avatarImageData, scale } = this.state\n    const { showing, close } = this.props\n\n    return (\n      <AvatarModalContainer showing={showing} onClick={close}>\n        <Modal\n          onClick={this.handlePropogation}\n          onSubmit={this.handleSubmit}\n          showing={showing}\n        >\n          <Heading>Upload an image</Heading>\n          {avatarImageData ? (\n            <Editor>\n              <AvatarEditor\n                ref={this.setEditorRef}\n                image={avatarImageData}\n                scale={scale / 100}\n                onImageChange={this.onImageCrop}\n              />\n              <input\n                type=\"range\"\n                min=\"100\"\n                max=\"200\"\n                value={this.state.scale}\n                onChange={this.setScale}\n              />\n            </Editor>\n          ) : null}\n          <Inputs>\n            <Input>\n              <span>{avatarImage ? avatarImage.name : 'select a file'}</span>\n              <label htmlFor=\"avatarImage\">choose</label>\n              <input\n                type=\"file\"\n                name=\"avatarImage\"\n                id=\"avatarImage\"\n                accept=\"image/*\"\n                onChange={this.handleChange}\n              />\n            </Input>\n          </Inputs>\n          <Options>\n            <Button className=\"close\" type=\"button\" onClick={close}>\n              CANCEL\n            </Button>\n            <Button className=\"confirm\" type=\"submit\">\n              UPLOAD\n            </Button>\n          </Options>\n        </Modal>\n      </AvatarModalContainer>\n    )\n  }\n}\n\nexport default ChangeAvatarModal\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport { useTheme } from 'styled-components'\n\nimport { FaUser, FaGlobeAsia, FaSun, FaMoon } from 'react-icons/fa'\nimport { MdExitToApp } from 'react-icons/md'\n\nimport { auth, database, storage } from '../../firebase/firebase.utils'\n\nimport {\n  selectCurrentUser,\n  selectUserStatus\n} from '../../redux/user/user.selectors'\n\nimport { setCurrentUser } from '../../redux/user/user.actions'\n\nimport { setUserStatus } from '../../redux/user/user.actions'\n\nimport { setTheme } from '../../redux/theme/theme.actions'\nimport { selectCurrentTheme } from '../../redux/theme/theme.selectors'\n\nimport {\n  UserAndOptionsContainer,\n  UserStatusCardContainer,\n  UserAvatar,\n  UserInfo,\n  Username,\n  UserStatus,\n  Indicator,\n  OptionsToggle,\n  Options,\n  Dots,\n  Dot,\n  Circle,\n  Line\n} from './user-status-card.styles'\n\nimport ChangeAvatarModal from '../change-avatar-modal/change-avatar-modal.component'\n\nconst ArrowSVG = props => {\n  const theme = useTheme()\n\n  return (\n    <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 18\">\n      <path\n        fill={theme.userStatusCard.icon}\n        d=\"M0 3c-1-1 1-3 2-3h20c2 0 3 2 2 3L14 17a3 3 0 01-4 0L0 3z\"\n      />\n    </svg>\n  )\n}\n\nconst UserStatusCard = ({\n  currentUser,\n  status,\n  setUserStatus,\n  setCurrentUser,\n  currentTheme,\n  setTheme\n}) => {\n  const theme = useTheme()\n  const [opened, setOpened] = useState(false)\n  const [statusBox, setStatusBox] = useState(false)\n  const [modal, showModal] = useState(false)\n\n  const handleStatusChange = status => {\n    setStatusBox(false)\n\n    database\n      .ref('presence')\n      .child(currentUser.uid)\n      .set(status, err => {\n        setUserStatus(status)\n        if (err) console.error(err)\n      })\n  }\n\n  const handleSignout = () => {\n    auth.signOut().then(x => {\n      console.log('signed out ')\n    })\n  }\n\n  const handleModalConfirm = avatarBlob => {\n    uploadCroppedImage(avatarBlob)\n    showModal(false)\n  }\n\n  const handleModalClose = () => {\n    showModal(false)\n  }\n\n  const updateAvatarImage = url => {\n    // just refreshing page to show updated image as url remains same user reset wont help\n    window.location.reload()\n\n    // THIS WILL BE USELESS AFTER I UPDATE HOW INITiAL USER AVATAR\n    // IMAGE SYSTEM WORKS DUE TO STATIC URLS\n\n    // auth.currentUser\n    //   .updateProfile({\n    //     photoURL: url\n    //   })\n    //   .then(() => {\n    //     console.log('photoURL updated')\n    //   })\n    //   .catch(err => console.error(err))\n\n    // firestore\n    //   .doc(`users/${currentUser.uid}`)\n    //   .update({\n    //     avatar: url\n    //   })\n    //   .then(() => {\n    //     console.log('user avatar update')\n    //   })\n    //   .catch(err => console.error(err))\n  }\n\n  const uploadCroppedImage = imageBlob => {\n    storage\n      .ref()\n      .child(`avatars/users/${currentUser.uid}`)\n      .put(imageBlob, { contentType: 'image/jpeg' })\n      .then(snapshot => {\n        snapshot.ref.getDownloadURL().then(url => updateAvatarImage(url))\n      })\n  }\n\n  const toggleTheme = () => {\n    if (currentTheme.name === 'light') {\n      setTheme('dark')\n    } else {\n      setTheme('light')\n    }\n  }\n\n  const { displayName, photoURL } = currentUser\n\n  return (\n    <UserAndOptionsContainer opened={opened}>\n      <ChangeAvatarModal\n        showing={modal}\n        close={handleModalClose}\n        confirm={handleModalConfirm}\n      />\n\n      <UserStatusCardContainer>\n        <UserAvatar>\n          <img src={photoURL} alt=\"user avatar\" />\n        </UserAvatar>\n        <UserInfo>\n          <Username>{displayName}</Username>\n          <UserStatus>\n            <Indicator status={status} /> <span>{status}</span>\n          </UserStatus>\n        </UserInfo>\n        <OptionsToggle opened={opened}>\n          <ArrowSVG onClick={() => setOpened(!opened)} />\n        </OptionsToggle>\n      </UserStatusCardContainer>\n\n      <Options opened={opened}>\n        <Line />\n        {statusBox ? null : (\n          <li onClick={() => setStatusBox(true)}>\n            <FaGlobeAsia color={theme.userStatusCard.icon} />\n            <span>set status</span>\n          </li>\n        )}\n\n        {statusBox ? (\n          <li className=\"status-box\">\n            <Dots>\n              <Dot name=\"online\" onClick={() => handleStatusChange('online')}>\n                <Circle name=\"online\" />\n              </Dot>\n              <Dot name=\"away\" onClick={() => handleStatusChange('away')}>\n                <Circle name=\"away\" />\n              </Dot>\n              <Dot name=\"offline\" onClick={() => handleStatusChange('offline')}>\n                <Circle name=\"offline\" />\n              </Dot>\n            </Dots>\n          </li>\n        ) : null}\n\n        <li onClick={() => showModal(true)}>\n          <FaUser color={theme.userStatusCard.icon} />\n          <span>change avatar</span>\n        </li>\n\n        <li onClick={() => toggleTheme()}>\n          {currentTheme.name === 'light' ? (\n            <>\n              <FaMoon color={theme.userStatusCard.icon} />\n              <span>toggle theme</span>\n            </>\n          ) : (\n            <>\n              <FaSun color={theme.userStatusCard.icon} />\n              <span>toggle theme</span>\n            </>\n          )}\n        </li>\n\n        <li onClick={handleSignout}>\n          <MdExitToApp color={theme.userStatusCard.icon} />\n          <span>log out</span>\n        </li>\n      </Options>\n    </UserAndOptionsContainer>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  status: selectUserStatus,\n  currentTheme: selectCurrentTheme\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setUserStatus: status => dispatch(setUserStatus(status)),\n  setCurrentUser: user => dispatch(setCurrentUser(user)),\n  setTheme: themeName => dispatch(setTheme(themeName))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserStatusCard)\n","import ThemeActionTypes from './theme.types'\n\nexport const setTheme = themeName => ({\n  type: ThemeActionTypes.SET_THEME,\n  payload: themeName\n})\n","const ChatActionTypes = {\n  SET_CHANNELS: 'SET_CHANNELS',\n  SET_CURRENT_CHANNEL: 'SET_CURRENT_CHANNEL',\n  UPDATE_CHANNEL_MEMBERS: 'UPDATE_CHANNEL_MEMBERS',\n  SET_MESSAGE_SEARCH_FILTERS: 'SET_MESSAGE_SEARCH_FILTERS',\n  SET_PRIVATE_CHANNEL: 'SET_PRIVATE_CHANNEL',\n  SET_OTHER_USERS_STATUS: 'SET_OTHER_USERS_STATUS',\n  SET_STARRED_CHANNELS: 'SET_STARRED_CHANNELS',\n  TOGGLE_SIDEBAR: 'TOGGLE_SIDEBAR',\n  TOGGLE_META: 'TOGGLE_META'\n}\n\nexport default ChatActionTypes\n","import ChatActionTypes from './chat.types'\n\nexport const setChannels = channels => ({\n  type: ChatActionTypes.SET_CHANNELS,\n  payload: channels\n})\n\nexport const setCurrentChannel = channel => ({\n  type: ChatActionTypes.SET_CURRENT_CHANNEL,\n  payload: channel\n})\n\nexport const updateChannelMembers = members => ({\n  type: ChatActionTypes.UPDATE_CHANNEL_MEMBERS,\n  payload: members\n})\n\nexport const setMessageSearchFilters = filters => ({\n  type: ChatActionTypes.SET_MESSAGE_SEARCH_FILTERS,\n  payload: filters\n})\n\nexport const setPrivateChannel = isPrivate => ({\n  type: ChatActionTypes.SET_PRIVATE_CHANNEL,\n  payload: isPrivate\n})\n\nexport const setOtherUsersStatus = otherUsersStatus => ({\n  type: ChatActionTypes.SET_OTHER_USERS_STATUS,\n  payload: otherUsersStatus\n})\n\nexport const setStarredChannels = starredChannels => ({\n  type: ChatActionTypes.SET_STARRED_CHANNELS,\n  payload: starredChannels\n})\n\nexport const toggleSidebar = boolean => ({\n  type: ChatActionTypes.TOGGLE_SIDEBAR,\n  payload: boolean\n})\n\nexport const toggleMeta = boolean => ({\n  type: ChatActionTypes.TOGGLE_META,\n  payload: boolean\n})\n","import { createSelector } from 'reselect'\n\nconst selectChat = state => state.chat\n\nexport const selectChannels = createSelector(\n  [selectChat],\n  chat => chat.channels\n)\n\nexport const selectCurrentChannel = createSelector(\n  [selectChat],\n  chat => chat.currentChannel\n)\n\nexport const selectChannelMembers = createSelector(\n  [selectChat],\n  chat => chat.channelMembers\n)\n\nexport const selectMessageSearchFilters = createSelector(\n  [selectChat],\n  chat => chat.messageSearchFilters\n)\n\nexport const selectIsPrivateChannel = createSelector(\n  [selectChat],\n  chat => chat.isPrivateChannel\n)\n\nexport const selectOtherUsersStatus = createSelector(\n  [selectChat],\n  chat => chat.otherUsersStatus\n)\n\nexport const selectStarredChannes = createSelector(\n  [selectChat],\n  chat => chat.starredChannels\n)\n\n// for mobile views\n\nexport const selectSidebarShowing = createSelector(\n  [selectChat],\n  chat => chat.sidebarShowing\n)\n\nexport const selectMetaShowing = createSelector(\n  [selectChat],\n  chat => chat.metaShowing\n)\n","import styled from 'styled-components'\n\nexport const StarredContainer = styled.div`\n  width: 100%;\n  height: auto;\n  border-radius: 14px;\n  padding: 18px;\n  background-color: ${({ theme }) => theme.starred.bg};\n`\n\nexport const StarredHeading = styled.div`\n  font-family: 'archiasemibold';\n  font-size: 17px;\n  color: ${({ theme }) => theme.starred.text};\n  display: grid;\n  grid-template-columns: auto 20px;\n\n  svg {\n    justify-self: center;\n    align-self: center;\n  }\n`\n\nexport const StarredList = styled.ul`\n  margin-top: 10px;\n`\n\nexport const StarredItem = styled.li`\n  font-family: 'archiasemibold';\n  font-size: 16px;\n  color: ${({ theme }) => theme.starred.text};\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 8px;\n  background-color: ${({ selected, theme }) =>\n    selected ? theme.starred.hover : 'transparent'};\n  opacity: ${({ selected }) => (selected ? 1 : 0.8)};\n\n  margin-bottom: 4px;\n\n  :last-child {\n    margin-bottom: 0px;\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.starred.hover};\n  }\n`\n\nexport const PlaceholderText = styled.p`\n  width: 100%;\n  text-align: center;\n  padding: 10px;\n  font-family: 'archiaregular';\n  font-size: 15px;\n  color: ${({ theme }) => theme.starred.text};\n  opacity: 0.9;\n`\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { FaStar } from 'react-icons/fa'\n\nimport {\n  setCurrentChannel,\n  setPrivateChannel\n} from '../../redux/chat/chat.actions'\n\nimport {\n  selectChannels,\n  selectCurrentChannel,\n  selectIsPrivateChannel\n} from '../../redux/chat/chat.selectors'\n\nimport {\n  StarredContainer,\n  StarredHeading,\n  StarredList,\n  StarredItem,\n  PlaceholderText\n} from './starred.styles'\n\nclass Starred extends React.Component {\n  setActiveChannel = channel => {\n    this.setState({ activeChannel: channel.id })\n  }\n\n  changeChannel = channel => {\n    const { setCurrentChannel, setPrivateChannel } = this.props\n    setCurrentChannel(channel)\n    setPrivateChannel(false)\n    this.setActiveChannel(channel)\n  }\n\n  getStarredChannels = () => {\n    const { channels } = this.props\n\n    if (this.props.channels) {\n      return channels.filter(channel => channel.starred)\n    } else {\n      return []\n    }\n  }\n\n  render() {\n    const { setCurrentChannel, currentChannel, isPrivateChannel } = this.props\n\n    return (\n      <StarredContainer>\n        <StarredHeading>\n          <span>STARRED</span>\n          <FaStar\n            onClick={this.openModal}\n            style={{ alignSelf: 'flex-end' }}\n            size={20}\n          />\n        </StarredHeading>\n        {this.getStarredChannels().length ? null : (\n          <PlaceholderText key=\"placeholder-text\">\n            Your favourite channels will show up here.\n          </PlaceholderText>\n        )}\n        <StarredList>\n          {this.getStarredChannels().map(channel => {\n            const { id, name } = channel\n            return (\n              <StarredItem\n                key={id}\n                onClick={() => setCurrentChannel(channel)}\n                selected={!isPrivateChannel && channel.id === currentChannel.id}\n              >\n                # {name}\n              </StarredItem>\n            )\n          })}\n        </StarredList>\n      </StarredContainer>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  channels: selectChannels,\n  currentChannel: selectCurrentChannel,\n  isPrivateChannel: selectIsPrivateChannel\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentChannel: channel => dispatch(setCurrentChannel(channel)),\n  setPrivateChannel: isPrivate => dispatch(setPrivateChannel(isPrivate))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Starred)\n","import styled, { css } from 'styled-components'\n\nconst opacityAnimation = css`\n  @keyframes opacityIn {\n    from {\n      background-color: transparent;\n    }\n    to {\n      visibility: visible;\n      background-color: ${({ theme }) => theme.channels.modal.bg};\n    }\n  }\n\n  @keyframes opacityOut {\n    from {\n      background-color: ${({ theme }) => theme.channels.modal.bg};\n      /* at start showing is false so in \n      order to avoit flicker issue visibility is set dynamically */\n      visibility: ${({ showing }) => (showing ? 'visible' : 'hidden')};\n    }\n    to {\n      visibility: hidden;\n      background-color: transparent;\n    }\n  }\n\n  animation-name: ${({ showing }) => (showing ? 'opacityIn' : 'opacityOut')};\n  animation-duration: 500ms;\n  animation-timing-function: ease-in-out;\n  animation-fill-mode: forwards;\n`\n\nconst scaleAnimation = css`\n  @keyframes scaleIn {\n    from {\n      opacity: 0;\n      transform: scale(0.5);\n    }\n    to {\n      visibility: visible;\n      opacity: 1;\n      transform: scale(1);\n    }\n  }\n\n  @keyframes scaleOut {\n    from {\n      visibility: ${({ showing }) => (showing ? 'visible' : 'hidden')};\n    }\n    to {\n      visibility: hidden;\n      opacity: 0;\n    }\n  }\n\n  animation-name: ${({ showing }) => (showing ? 'scaleIn' : 'scaleOut')};\n  animation-duration: 500ms;\n  animation-timing-function: cubic-bezier(0.19, 0.67, 0.01, 1.3);\n  animation-fill-mode: forwards;\n`\n\nexport const ModalContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  position: fixed;\n  z-index: 10;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  visibility: hidden;\n\n  ${opacityAnimation}\n`\n\nexport const Modal = styled.form`\n  padding: 20px;\n  border-radius: 12px;\n  visibility: hidden;\n  background: ${({ theme }) => theme.channels.modal.modalBg};\n  display: grid;\n  grid-gap: 16px;\n\n  ${scaleAnimation}\n`\n\nexport const Heading = styled.h2`\n  color: ${({ theme }) => theme.channels.modal.textPrimary};\n  font-size: 20px;\n  font-family: 'archiasemibold';\n`\n\nexport const Inputs = styled.div`\n  display: grid;\n  grid-gap: 10px;\n`\n\nexport const Input = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 80px auto;\n\n  span {\n    font-family: 'archiasemibold';\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 6px 12px;\n    font-size: 16px;\n    height: 100%;\n    width: 100%;\n    border-radius: 8px 0px 0px 8px;\n    color: ${({ theme }) => theme.channels.modal.textSecondary};\n    background-color: ${({ theme }) => theme.channels.modal.textPrimary};\n  }\n\n  input {\n    padding: 8px;\n    border: 0px;\n    background-color: ${({ theme }) => theme.channels.modal.bg};\n    color: ${({ theme }) => theme.channels.modal.textPrimary};\n    border-radius: 8px;\n    font-family: 'archiaregular';\n    font-size: 16px;\n\n    &:focus {\n      outline: none;\n    }\n\n    &::placeholder {\n      color: ${({ theme }) => theme.channels.modal.textPrimary};\n    }\n  }\n`\n\nexport const Options = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding-top: 10px;\n`\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  border: 2px solid transparent;\n  font-family: 'archiasemibold';\n  cursor: pointer;\n  outline: none;\n  border-radius: 8px;\n  padding: 6px;\n  min-width: 70px;\n  font-size: 15px;\n\n  &.close {\n    color: ${({ theme }) => theme.channels.modal.textPrimary};\n    background-color: ${({ theme }) => theme.channels.modal.textSecondary};\n    border: 2px solid ${({ theme }) => theme.channels.modal.textPrimary};\n  }\n\n  &.confirm {\n    color: ${({ theme }) => theme.channels.modal.textSecondary};\n    background-color: ${({ theme }) => theme.channels.modal.textPrimary};\n  }\n`\n","import React from 'react'\n\nimport {\n  ModalContainer,\n  Modal,\n  Heading,\n  Inputs,\n  Input,\n  Options,\n  Button\n} from './add-channel-modal.styles'\n\nclass AddChannelModal extends React.Component {\n  state = {\n    name: '',\n    about: ''\n  }\n\n  handlePropogation = event => {\n    event.stopPropagation()\n  }\n\n  formattedValue = value => {\n    value = value\n      .replace(' ', '-')\n      .replace('--', '-')\n      .toLowerCase()\n\n    if (value.startsWith('-')) value = ''\n    return value\n  }\n\n  handleChange = event => {\n    let {\n      target: { name, value }\n    } = event\n\n    if (name === 'name') value = this.formattedValue(value)\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    let { name, about } = this.state\n    name = name.endsWith('-') ? name.substring(0, name.length - 1) : name\n    const { confirm } = this.props\n    confirm({ name, about })\n  }\n\n  render() {\n    const { showing, close } = this.props\n    const { name, about } = this.state\n\n    return (\n      <ModalContainer showing={showing} onClick={close}>\n        <Modal\n          onClick={this.handlePropogation}\n          onSubmit={this.handleSubmit}\n          showing={showing}\n        >\n          <Heading>Add a channel</Heading>\n          <Inputs>\n            <Input>\n              <span>name</span>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                placeholder=\"channel-name\"\n                onChange={this.handleChange}\n              />\n            </Input>\n            <Input>\n              <span>about</span>\n              <input\n                type=\"text\"\n                name=\"about\"\n                value={about}\n                placeholder=\"description\"\n                onChange={this.handleChange}\n              />\n            </Input>\n          </Inputs>\n          <Options>\n            <Button className=\"close\" type=\"button\" onClick={close}>\n              CANCEL\n            </Button>\n            <Button className=\"confirm\" type=\"submit\">\n              ADD\n            </Button>\n          </Options>\n        </Modal>\n      </ModalContainer>\n    )\n  }\n}\n\nexport default AddChannelModal\n","import styled from 'styled-components'\n\nexport const SpinnerContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  background: ${({ theme }) => theme.spinner.bg};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const Loader = styled.div`\n  @keyframes spin {\n    from {\n      transform: rotate(-45deg);\n    }\n    to {\n      transform: rotate(315deg);\n    }\n  }\n\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  border: 8px solid ${({ theme, color }) => color || theme.spinner.loaderFg};\n  border-right: 8px Solid ${({ theme }) => theme.spinner.loaderBg};\n  border-radius: 9999px;\n  animation: linear spin 1.2s infinite;\n`\n\nexport const LoadingText = styled.p`\n  font-family: 'archiasemibold';\n  color: ${({ theme }) => theme.spinner.text};\n  font-size: ${({ fontSize }) => fontSize};\n  padding: 20px;\n`\n","import React from 'react'\n\nimport { SpinnerContainer, LoadingText, Loader } from './spinner.styles'\n\nconst Spinner = ({\n  loadingText,\n  size = '50px',\n  fontSize = '16px',\n  ...props\n}) => {\n  return (\n    <SpinnerContainer {...props}>\n      <Loader size={size} />\n      {loadingText ? (\n        <LoadingText fontSize={fontSize}>{loadingText}</LoadingText>\n      ) : (\n        ''\n      )}\n    </SpinnerContainer>\n  )\n}\n\nexport default Spinner\n","import styled from 'styled-components'\n\nexport const ChannelsContainer = styled.div`\n  width: 100%;\n  height: auto;\n  border-radius: 14px;\n  padding: 18px;\n  background-color: ${({ theme }) => theme.channels.bg};\n`\n\nexport const ChannelsHeading = styled.div`\n  font-family: 'archiasemibold';\n  font-size: 17px;\n  color: ${({ theme }) => theme.channels.text};\n  display: grid;\n  grid-template-columns: auto 20px;\n\n  svg {\n    justify-self: center;\n    align-self: center;\n    cursor: pointer;\n  }\n`\n\nexport const ChannelsList = styled.ul`\n  margin-top: 10px;\n`\n\nexport const ChannelItem = styled.li`\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n\n  background-color: ${({ selected, theme }) =>\n    selected ? theme.channels.hover : 'transparent'};\n  opacity: ${({ selected }) => (selected ? 1 : 0.8)};\n\n  margin-bottom: 4px;\n\n  :last-child {\n    margin-bottom: 0px;\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.channels.hover};\n  }\n`\nexport const Name = styled.p`\n  font-family: 'archiasemibold';\n  font-size: 16px;\n  color: ${({ theme }) => theme.channels.text};\n  flex: 1 0;\n`\n\nexport const Notifications = styled.span`\n  font-family: 'archiasemibold';\n  background-color: ${({ theme }) => theme.channels.notificationsBg};\n  color: ${({ theme }) => theme.channels.notificationsFg};\n  padding: 2px 4px;\n  font-size: 13px;\n  border-radius: 6px;\n  justify-self: flex-end;\n`\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { FaPlusSquare } from 'react-icons/fa'\n\nimport AddChannelModal from '../add-channel-modal/add-channel-modal.component'\n\nimport { selectCurrentUser } from '../../redux/user/user.selectors'\nimport {\n  selectChannels,\n  selectCurrentChannel,\n  selectIsPrivateChannel\n} from '../../redux/chat/chat.selectors'\nimport {\n  setCurrentChannel,\n  setPrivateChannel,\n  setChannels\n} from '../../redux/chat/chat.actions'\n\nimport Spinner from '../spinner/spinner.component'\n\nimport {\n  ChannelsContainer,\n  ChannelsHeading,\n  ChannelsList,\n  ChannelItem,\n  Name,\n  Notifications\n} from './channels.styles'\n\nimport firebase, { firestore, database } from '../../firebase/firebase.utils'\n\nclass Channels extends React.Component {\n  state = {\n    channel: null,\n    channelName: '',\n    channelDetails: '',\n    channelsRef: firestore.collection('channels'),\n    typingRef: database.ref('typing'),\n    unsubscribeChannelListener: null,\n    notificationListeners: {},\n    notifications: [],\n    modal: false,\n    firstLoad: true,\n    activeChannel: null\n  }\n\n  componentDidMount() {\n    this.addListeners()\n  }\n\n  componentDidUpdate() {\n    const { channels } = this.props\n    if (channels) this.setFirstChannel()\n  }\n\n  componentWillUnmount() {\n    this.removeListeners()\n  }\n\n  addListeners = () => {\n    const { channelsRef } = this.state\n    const { setChannels } = this.props\n\n    const unsubscribe = channelsRef\n      .orderBy('createdAt', 'asc')\n      .onSnapshot(snapshot => {\n        const channels = snapshot.docs.map(doc => doc.data())\n        setChannels(channels)\n\n        // add notification listener for each channel\n        channels.forEach(channel => this.addNotificationListener(channel.id))\n      })\n\n    this.setState({\n      unsubscribeChannelListener: unsubscribe\n    })\n  }\n\n  addNotificationListener = channelId => {\n    const { channelsRef } = this.state\n\n    const listener = channelsRef\n      .doc(channelId)\n      .collection('messages')\n      .onSnapshot(snapshot => {\n        if (this.state.channel) {\n          this.handleNotifications(\n            channelId,\n            this.state.channel.id,\n            this.state.notifications,\n            snapshot\n          )\n        }\n      })\n\n    this.setState(({ notificationListeners }) => ({\n      notificationListeners: { ...notificationListeners, [channelId]: listener }\n    }))\n  }\n\n  handleNotifications = (\n    channelId,\n    currentChannelId,\n    notifications,\n    snapshot\n  ) => {\n    let lastTotal = 0\n\n    const index = notifications.findIndex(\n      notification => notification.id === channelId\n    )\n\n    if (index !== -1) {\n      if (channelId !== currentChannelId) {\n        lastTotal = notifications[index].lastKnownTotal\n\n        if (snapshot.docs.length - lastTotal > 0) {\n          notifications[index].count = snapshot.docs.length - lastTotal\n          notifications[index].total = snapshot.docs.length\n        }\n      }\n    } else {\n      notifications.push({\n        id: channelId,\n        total: snapshot.docs.length,\n        lastKnownTotal: snapshot.docs.length,\n        count: 0\n      })\n    }\n\n    this.setState({\n      notifications\n    })\n  }\n\n  removeListeners = () => {\n    const { unsubscribeChannelListener } = this.state\n    unsubscribeChannelListener()\n    const { notificationListeners } = this.state\n    Object.keys(notificationListeners).forEach(listener => {\n      notificationListeners[listener]()\n    })\n  }\n\n  setFirstChannel = () => {\n    const { firstLoad } = this.state\n    const { setCurrentChannel, channels } = this.props\n    if (firstLoad && channels.length) {\n      setCurrentChannel(channels[0])\n      this.setActiveChannel(channels[0])\n      this.setState({ firstLoad: false, channel: channels[0] })\n    }\n  }\n\n  addChannel = ({ name, about }) => {\n    const { channelsRef } = this.state\n    const { currentUser } = this.props\n\n    const ref = channelsRef.doc()\n\n    const newChannel = {\n      id: ref.id,\n      name,\n      details: about,\n      createdBy: {\n        name: currentUser.displayName,\n        avatar: currentUser.photoURL,\n        uid: currentUser.uid\n      },\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    }\n\n    channelsRef\n      .doc(ref.id)\n      .set(newChannel)\n      .then(() => {\n        this.setState({ channelName: '', channelDetails: '', modal: false })\n        console.log('channel created')\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  handleClose = () => {\n    this.setState({ modal: false })\n  }\n\n  handleConfirm = ({ name, about }) => {\n    this.setState({ channelName: name, channelDetails: about })\n    if (name && about) {\n      this.addChannel({ name, about })\n    }\n  }\n\n  openModal = () => {\n    this.setState({ modal: true })\n  }\n\n  setActiveChannel = channel => {\n    this.setState({ activeChannel: channel.id })\n  }\n\n  changeChannel = channel => {\n    const { typingRef } = this.state\n    const {\n      setCurrentChannel,\n      setPrivateChannel,\n      currentUser,\n      currentChannel\n    } = this.props\n    typingRef.child(currentChannel.id).child(currentUser.uid).remove()\n    setCurrentChannel(channel)\n    setPrivateChannel(false)\n    this.setActiveChannel(channel)\n    this.setState({ channel }, () => this.clearNotifications())\n  }\n\n  clearNotifications = () => {\n    let index = this.state.notifications.findIndex(\n      notification => notification.id === this.state.channel.id\n    )\n\n    if (index !== -1) {\n      let updatedNotifications = [...this.state.notifications]\n      updatedNotifications[index].lastKnownTotal = this.state.notifications[\n        index\n      ].total\n      updatedNotifications[index].count = 0\n      this.setState({\n        notifications: updatedNotifications\n      })\n    }\n  }\n\n  getNotificationCount = channel => {\n    let count = 0\n    this.state.notifications.forEach(notification => {\n      if (notification.id === channel.id) {\n        count = notification.count\n      }\n    })\n\n    return count\n  }\n\n  render() {\n    const { modal, firstLoad } = this.state\n    const { isPrivateChannel, currentChannel, channels } = this.props\n\n    return (\n      <ChannelsContainer>\n        <AddChannelModal\n          close={this.handleClose}\n          confirm={this.handleConfirm}\n          showing={modal}\n        />\n        <ChannelsHeading>\n          <span>CHANNELS</span>\n          <FaPlusSquare\n            onClick={this.openModal}\n            style={{ alignSelf: 'flex-end' }}\n            size={20}\n          />\n        </ChannelsHeading>\n        {firstLoad ? (\n          <Spinner\n            style={{ backgroundColor: 'transparent', marginTop: 20 }}\n            size=\"40px\"\n          />\n        ) : (\n          <ChannelsList>\n            {channels.map(channel => {\n              const { id, name } = channel\n              return (\n                <ChannelItem\n                  key={id}\n                  selected={\n                    channel.id === currentChannel.id && !isPrivateChannel\n                  }\n                  onClick={() => this.changeChannel(channel)}\n                >\n                  <Name># {name}</Name>{' '}\n                  {this.getNotificationCount(channel) ? (\n                    <Notifications>\n                      {this.getNotificationCount(channel)}\n                    </Notifications>\n                  ) : null}\n                </ChannelItem>\n              )\n            })}\n          </ChannelsList>\n        )}\n      </ChannelsContainer>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  channels: selectChannels,\n  currentChannel: selectCurrentChannel,\n  isPrivateChannel: selectIsPrivateChannel\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setChannels: channels => dispatch(setChannels(channels)),\n  setCurrentChannel: channel => dispatch(setCurrentChannel(channel)),\n  setPrivateChannel: isPrivate => dispatch(setPrivateChannel(isPrivate))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Channels)\n","import styled from 'styled-components'\n\nexport const DirectMessagesContainer = styled.div`\n  width: 100%;\n  height: auto;\n  border-radius: 14px;\n  padding: 18px;\n  background-color: ${({ theme }) => theme.directMessages.bg};\n`\n\nexport const DirectMessagesHeading = styled.div`\n  font-family: 'archiasemibold';\n  font-size: 17px;\n  color: ${({ theme }) => theme.directMessages.text};\n  display: grid;\n  grid-template-columns: auto 20px;\n\n  svg {\n    justify-self: center;\n    align-self: center;\n    cursor: pointer;\n  }\n`\n\nexport const DirectMessagesList = styled.ul`\n  margin-top: 10px;\n`\n\nexport const DirectMessagesItem = styled.li`\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 8px;\n  background-color: ${({ selected, theme }) =>\n    selected ? theme.directMessages.hover : 'transparent'};\n  opacity: ${({ selected }) => (selected ? 1 : 0.8)};\n\n  margin-bottom: 4px;\n\n  :last-child {\n    margin-bottom: 0px;\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.directMessages.hover};\n  }\n`\n\nexport const User = styled.div`\n  display: flex;\n  align-items: center;\n\n  p {\n    font-family: 'archiasemibold';\n    font-size: 16px;\n    color: ${({ theme }) => theme.directMessages.text};\n    margin-left: 6px;\n  }\n`\n\nexport const Status = styled.div`\n  width: 10px;\n  height: 10px;\n  border-radius: 10px;\n\n  background-color: ${({ theme, status }) => {\n    const { directMessages } = theme\n    if (status === 'online') return directMessages.status.online\n    if (status === 'away') return directMessages.status.away\n    else return directMessages.status.offline\n  }};\n`\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { MdMessage } from 'react-icons/md'\n\nimport {\n  selectCurrentUser,\n  selectUserStatus\n} from '../../redux/user/user.selectors'\n\nimport {\n  setCurrentChannel,\n  setPrivateChannel,\n  setOtherUsersStatus\n} from '../../redux/chat/chat.actions'\n\nimport { selectIsPrivateChannel } from '../../redux/chat/chat.selectors'\n\nimport { firestore, database } from '../../firebase/firebase.utils'\n\nimport Spinner from '../spinner/spinner.component'\n\nimport {\n  DirectMessagesContainer,\n  DirectMessagesHeading,\n  DirectMessagesList,\n  DirectMessagesItem,\n  User,\n  Status\n} from './direct-messages.styles'\n\nclass DirectMessages extends React.Component {\n  state = {\n    users: [],\n    usersListener: null,\n    connectedRef: database.ref('.info/connected'),\n    presenceRef: database.ref('presence'),\n    activeChannel: null\n  }\n\n  componentDidMount() {\n    const { currentUser } = this.props\n    if (currentUser) {\n      this.addListeners(currentUser.uid)\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners()\n  }\n\n  addListeners = currentUserUid => {\n    const { connectedRef, presenceRef } = this.state\n    const { userStatus } = this.props\n\n    const usersListener = firestore.collection('users').onSnapshot(snapshot => {\n      const otherUsers = snapshot.docs.filter(doc => doc.id !== currentUserUid)\n      const usersWithDetails = otherUsers.map(user => {\n        let userWithDetails = {\n          ...user.data(),\n          uid: user.id,\n          status: 'offline'\n        }\n\n        return userWithDetails\n      })\n\n      this.setState(\n        {\n          users: usersWithDetails\n        },\n        this.updateUsersStatus\n      )\n    })\n\n    this.setState({\n      usersListener\n    })\n\n    // setting user presence\n\n    connectedRef.on('value', snapshot => {\n      if (snapshot.val()) {\n        const ref = presenceRef.child(currentUserUid)\n        // set user status from state in case of connection disonnect and reconnect\n        // status will be restored from state\n        ref.set(userStatus)\n        ref.onDisconnect().set('offline')\n      }\n    })\n  }\n\n  removeListeners = () => {\n    const { usersListener, connectedRef, presenceRef } = this.state\n    const { currentUser } = this.props\n\n    usersListener()\n    connectedRef.off()\n\n    // set user status offline\n    presenceRef.child(currentUser.uid).set('offline')\n\n    presenceRef.off()\n  }\n\n  updateUsersStatus = () => {\n    const { presenceRef } = this.state\n    const { setOtherUsersStatus } = this.props\n\n    presenceRef.on('value', snapshot => {\n      const usersPrescence = snapshot.val()\n\n      setOtherUsersStatus(usersPrescence)\n\n      Object.keys(usersPrescence).forEach(userId => {\n        this.addStatusToUser(userId, usersPrescence[userId])\n      })\n    })\n  }\n\n  addStatusToUser = (userId, status = 'online') => {\n    const { users } = this.state\n    const updatedUsers = users.reduce((acc, user) => {\n      if (user.uid === userId) {\n        user['status'] = status\n      }\n      return acc.concat(user)\n    }, [])\n\n    this.setState({\n      users: updatedUsers\n    })\n  }\n\n  changeChannel = user => {\n    const { setCurrentChannel, setPrivateChannel } = this.props\n    const channelId = this.getChannelId(user.uid)\n    const channelData = {\n      id: channelId,\n      name: user.name,\n      uid: user.uid,\n      type: 'direct'\n    }\n\n    setCurrentChannel(channelData)\n    setPrivateChannel(true)\n    this.setActiveChannel(channelId)\n  }\n\n  getChannelId = userId => {\n    const { currentUser } = this.props\n    const currentUserId = currentUser.uid\n    return userId < currentUserId\n      ? `${userId}/${currentUserId}`\n      : `${currentUserId}/${userId}`\n  }\n\n  setActiveChannel = channelId => {\n    this.setState({ activeChannel: channelId })\n  }\n\n  render() {\n    const { users, activeChannel } = this.state\n    const { isPrivateChannel } = this.props\n\n    return (\n      <DirectMessagesContainer>\n        <DirectMessagesHeading>\n          <span>DIRECT MESSAGES</span>\n          <MdMessage\n            onClick={this.openModal}\n            style={{ alignSelf: 'flex-end' }}\n            size={20}\n          />\n        </DirectMessagesHeading>\n        {users.length ? (\n          <DirectMessagesList>\n            {users.map(user => {\n              const { uid, name, status = 'offline' } = user\n              return (\n                <DirectMessagesItem\n                  key={uid}\n                  selected={\n                    activeChannel === this.getChannelId(uid) && isPrivateChannel\n                  }\n                >\n                  <User onClick={() => this.changeChannel(user)}>\n                    <Status status={status} /> <p>{name}</p>\n                  </User>\n                </DirectMessagesItem>\n              )\n            })}\n          </DirectMessagesList>\n        ) : (\n          <Spinner\n            style={{ backgroundColor: 'transparent', marginTop: 20 }}\n            size=\"40px\"\n          />\n        )}\n      </DirectMessagesContainer>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  userStatus: selectUserStatus,\n  isPrivateChannel: selectIsPrivateChannel\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentChannel: channel => dispatch(setCurrentChannel(channel)),\n  setPrivateChannel: isPrivate => dispatch(setPrivateChannel(isPrivate)),\n  setOtherUsersStatus: usersStatus => dispatch(setOtherUsersStatus(usersStatus))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DirectMessages)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { FaArrowLeft } from 'react-icons/fa'\n\nimport { SidePanelContainer, CloseSidebar } from './side-panel.styles'\n\nimport UserStatusCard from '../user-status-card/user-status-card.component'\nimport Starred from '../starred/starred.component'\nimport Channels from '../channels/channels.component'\nimport DirectMessages from '../direct-messages/direct-messages.component'\n\nimport { selectSidebarShowing } from '../../redux/chat/chat.selectors'\nimport { toggleSidebar } from '../../redux/chat/chat.actions'\n\nconst SidePanel = ({ sidebarShowing, toggleSidebar }) => {\n  return (\n    <SidePanelContainer sidebarShowing={sidebarShowing}>\n      <CloseSidebar onClick={() => toggleSidebar(false)}>\n        <FaArrowLeft />\n        <span>CLOSE</span>\n      </CloseSidebar>\n      <UserStatusCard />\n      <Starred />\n      <Channels />\n      <DirectMessages />\n    </SidePanelContainer>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  sidebarShowing: selectSidebarShowing\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleSidebar: boolean => dispatch(toggleSidebar(boolean))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidePanel)\n","import styled from 'styled-components'\n\nexport const MessagesPanelContainer = styled.div`\n  flex: 1 0;\n  height: 100%;\n  padding: 14px;\n  display: grid;\n  grid-gap: 14px;\n  grid-template-rows: auto 1fr auto;\n`\n","import styled from 'styled-components'\n\nexport const ChannelHeaderContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 14px;\n  padding: 14px 20px;\n  display: grid;\n  align-items: center;\n  grid-template-columns: minmax(240px, 2fr) minmax(200px, 1fr);\n  font-family: 'archiasemibold';\n  background-color: ${({ theme: { channelHeader } }) => channelHeader.bg};\n  color: ${({ theme: { channelHeader } }) => channelHeader.text};\n\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: auto 0px;\n  }\n`\n\nexport const ChannelInfo = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nexport const SidebarButton = styled.button`\n  background: ${({ theme }) => theme.channelHeader.search.bg};\n  outline: none;\n  border: 0px;\n  padding: 4px;\n  border-radius: 4px;\n  margin-right: 8px;\n  margin-left: 0px !important;\n  font-size: 22px;\n  justify-content: center;\n  align-items: center;\n  display: none;\n\n  svg {\n    color: ${({ theme }) => theme.channelHeader.sidebarIcon} !important;\n  }\n\n  @media only screen and (max-width: 768px) {\n    display: flex;\n  }\n`\n\nexport const Heading = styled.h2`\n  display: flex;\n  align-items: center;\n  font-size: 30px;\n  span {\n    margin-right: 4px;\n  }\n\n  svg {\n    color: ${({ theme }) => theme.channelHeader.starIcon};\n    cursor: pointer;\n  }\n`\n\nexport const About = styled.p`\n  margin-top: 12px;\n  margin-bottom: 2px;\n  opacity: 0.8;\n\n  @media only screen and (max-width: 768px) {\n    display: none;\n  }\n`\n\nexport const Members = styled.span`\n  font-size: 14px;\n\n  @media only screen and (max-width: 768px) {\n    display: none;\n  }\n`\n\nexport const SearchFieldContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const Search = styled.div`\n  position: relative;\n  width: 100%;\n  height: 46px;\n\n  svg {\n    color: ${({ theme }) => theme.channelHeader.search.placeholder};\n    position: absolute;\n    right: 12px;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    cursor: pointer;\n  }\n\n  @media only screen and (max-width: 768px) {\n    display: none;\n  }\n`\n\nexport const SearchInput = styled.input`\n  color: ${({ theme }) => theme.channelHeader.search.text};\n  background-color: ${({ theme }) => theme.channelHeader.search.bg};\n  border-radius: 14px;\n  border: none;\n  font-size: 15px;\n  font-family: 'archiaregular';\n  width: 100%;\n  height: 100%;\n  padding: 16px 34px 16px 14px;\n\n  &::placeholder {\n    color: ${({ theme }) => theme.channelHeader.search.placeholder};\n  }\n\n  &:focus {\n    outline: none;\n  }\n`\n\nexport const UserStatus = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 6px;\n  margin-left: 6px;\n`\n\nexport const Dot = styled.div`\n  width: 10px;\n  height: 10px;\n  border-radius: 10px;\n\n  background-color: ${({ theme, status }) => {\n    const { directMessages } = theme\n    if (status === 'online') return directMessages.status.online\n    if (status === 'away') return directMessages.status.away\n    else return directMessages.status.offline\n  }};\n`\n\nexport const Status = styled.p`\n  margin-left: 5px;\n  text-transform: capitalize;\n  opacity: 0.8;\n`\n\nexport const InfoToggle = styled.button`\n  font-size: 24px;\n  outline: none;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  height: 100%;\n  padding: 6px;\n  display: none;\n  justify-content: center;\n  align-items: center;\n  margin-left: 8px;\n  color: ${({ theme }) => theme.channelHeader.infoIcon};\n\n  @media only screen and (max-width: 1100px) {\n    display: flex;\n  }\n`\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport {\n  FaStar,\n  FaRegStar,\n  FaSearch,\n  FaTimes,\n  FaBars,\n  FaInfoCircle\n} from 'react-icons/fa'\n\nimport Spinner from '../spinner/spinner.component'\n\nimport {\n  ChannelHeaderContainer,\n  ChannelInfo,\n  Heading,\n  About,\n  Members,\n  SearchFieldContainer,\n  Search,\n  SearchInput,\n  UserStatus,\n  Dot,\n  Status,\n  SidebarButton,\n  InfoToggle\n} from './channel-header.styles'\n\nimport {\n  selectChannelMembers,\n  selectIsPrivateChannel,\n  selectOtherUsersStatus\n} from '../../redux/chat/chat.selectors'\n\nimport {\n  setMessageSearchFilters,\n  setStarredChannels,\n  toggleSidebar,\n  toggleMeta\n} from '../../redux/chat/chat.actions'\n\nimport { firestore } from '../../firebase/firebase.utils'\n\nclass ChannelHeader extends React.Component {\n  state = {\n    filters: {\n      text: ''\n    },\n    status: 'offline',\n    usersRef: firestore.collection('users')\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target\n\n    this.setState(\n      {\n        filters: {\n          [name]: value\n        }\n      },\n      () => {\n        this.setFilters(this.state.filters)\n      }\n    )\n  }\n\n  unsubscribeStarredListener = null\n\n  componentDidMount() {\n    const { usersRef } = this.state\n    const { currentUser, setStarredChannels } = this.props\n\n    this.unsubscribeStarredListener = usersRef\n      .doc(currentUser.uid)\n      .onSnapshot(snapshot => {\n        const starred = snapshot.data()\n        if (starred) {\n          setStarredChannels(starred['starred'])\n        }\n      })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeStarredListener()\n  }\n\n  setFilters = filters => {\n    const { setMessageSearchFilters } = this.props\n\n    setMessageSearchFilters(filters)\n  }\n\n  clearText = () => {\n    this.setState(\n      {\n        filters: {\n          text: ''\n        }\n      },\n      () => {\n        this.setFilters(this.state.filters)\n      }\n    )\n  }\n\n  getStatusForDM = () => {\n    const { otherUsersStatus, currentChannel } = this.props\n    if (currentChannel && currentChannel['uid']) {\n      return otherUsersStatus[currentChannel['uid']]\n    } else {\n      return 'offline'\n    }\n  }\n\n  handleStar = starred => {\n    this.starChannel(starred)\n  }\n\n  starChannel = () => {\n    const { usersRef } = this.state\n    const { currentUser, currentChannel } = this.props\n\n    let starredChannels = []\n\n    // check if starred property exists on user first\n    usersRef\n      .doc(currentUser.uid)\n      .get()\n      .then(snapshot => {\n        const data = snapshot.data()\n        if (data['starred']) {\n          starredChannels = [...data['starred']]\n        } else {\n          starredChannels = []\n        }\n\n        // check if channel already starred\n        const index = starredChannels.indexOf(currentChannel.id)\n        if (index === -1) {\n          starredChannels.push(currentChannel.id)\n        } else {\n          starredChannels.splice(index, 1)\n        }\n\n        // push new starred channels array to firebase\n        usersRef\n          .doc(currentUser.uid)\n          .update({\n            starred: starredChannels\n          })\n          .then(() => console.log('starred channels updated'))\n          .catch(err => console.error(err))\n      })\n  }\n\n  render() {\n    const {\n      currentChannel,\n      members,\n      privateChannel,\n      toggleSidebar,\n      toggleMeta\n    } = this.props\n    const { filters } = this.state\n\n    // status for direct message user\n    const status = this.getStatusForDM()\n\n    return (\n      <ChannelHeaderContainer>\n        {currentChannel ? (\n          <>\n            <ChannelInfo>\n              <Heading>\n                <SidebarButton onClick={() => toggleSidebar()}>\n                  <FaBars />\n                </SidebarButton>\n                <span>\n                  {privateChannel ? '@' : '#'} {currentChannel.name}\n                </span>{' '}\n                {!privateChannel ? (\n                  currentChannel.starred ? (\n                    <FaStar size={26} onClick={() => this.handleStar()} />\n                  ) : (\n                    <FaRegStar size={26} onClick={() => this.handleStar()} />\n                  )\n                ) : null}\n              </Heading>\n              {!privateChannel ? (\n                <About>{currentChannel.details}</About>\n              ) : (\n                <UserStatus>\n                  <Dot status={status} /> <Status>{status}</Status>\n                </UserStatus>\n              )}\n              {!privateChannel ? (\n                <Members>\n                  {members && members.count === 1\n                    ? `${members.count} member`\n                    : `${members.count} members`}\n                </Members>\n              ) : null}\n            </ChannelInfo>\n            <SearchFieldContainer>\n              <Search>\n                <SearchInput\n                  type=\"text\"\n                  name=\"text\"\n                  onChange={this.handleChange}\n                  value={filters.text}\n                  placeholder=\"search messages\"\n                />\n                {filters.text.length ? (\n                  <FaTimes onClick={this.clearText} />\n                ) : (\n                  <FaSearch />\n                )}\n              </Search>\n              <InfoToggle onClick={() => toggleMeta()}>\n                <FaInfoCircle />\n              </InfoToggle>\n            </SearchFieldContainer>\n          </>\n        ) : (\n          <Spinner\n            style={{ backgroundColor: 'transparent', gridColumn: '1 / span 2' }}\n          />\n        )}\n      </ChannelHeaderContainer>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  members: selectChannelMembers,\n  privateChannel: selectIsPrivateChannel,\n  otherUsersStatus: selectOtherUsersStatus\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setMessageSearchFilters: filters =>\n    dispatch(setMessageSearchFilters(filters)),\n  setStarredChannels: starredChannels =>\n    dispatch(setStarredChannels(starredChannels)),\n  toggleSidebar: boolean => dispatch(toggleSidebar(boolean)),\n  toggleMeta: boolean => dispatch(toggleMeta(boolean))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChannelHeader)\n","import styled, { css } from 'styled-components'\n\nconst scrollbar = css`\n  ::-webkit-scrollbar {\n    width: 10px;\n    height: 10px;\n  }\n  ::-webkit-scrollbar-button {\n    width: 0px;\n    height: 0px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.scrollbar.fg};\n    opacity: 0.5;\n    border: 0px;\n    border-radius: 50px;\n  }\n  ::-webkit-scrollbar-thumb:hover,\n  ::-webkit-scrollbar-thumb:active {\n    background: ${({ theme }) => theme.scrollbar.fgHover};\n  }\n\n  ::-webkit-scrollbar-track {\n    border: 0px;\n    border-radius: 50px;\n  }\n  ::-webkit-scrollbar-track,\n  ::-webkit-scrollbar-track:hover,\n  ::-webkit-scrollbar-track:active {\n    background: ${({ theme }) => theme.scrollbar.bg};\n  }\n\n  ::-webkit-scrollbar-corner {\n    background: transparent;\n  }\n`\n\nexport const MessagesContainer = styled.div`\n  width: 100%;\n  min-height: 100%;\n  border-radius: 14px;\n  padding: 20px;\n  background-color: ${({ theme }) => theme.messages.bg};\n  display: flex;\n  flex-direction: column;\n`\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n  flex: 1 0;\n\n  > :nth-child(n) {\n    margin-bottom: 12px;\n  }\n\n  > :last-child {\n    margin-bottom: 0px;\n  }\n\n  ${scrollbar}\n`\n\nexport const TypingContainer = styled.div`\n  align-self: flex-end;\n  width: 100%;\n`\n\nexport const EmptyPlaceholder = styled.div`\n  width: 100%;\n  height: 90%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: 'archiabold';\n  font-size: 24px;\n\n  span {\n    color: ${({ theme }) => theme.messages.placeholder};\n  }\n`\n","import styled from 'styled-components'\n\nexport const MessageContainer = styled.div`\n  display: grid;\n  grid-template-columns: 54px auto;\n  grid-gap: 8px;\n  align-items: center;\n`\n\nexport const Avatar = styled.div`\n  width: 100%;\n  height: 100%;\n  img {\n    width: 54px;\n    height: 54px;\n    align-self: top;\n    border-radius: 14px;\n  }\n`\n\nexport const MessageInfo = styled.div`\n  color: ${({ theme }) => theme.message.textPrimary};\n`\n\nexport const Heading = styled.div`\n  font-family: 'archiasemibold';\n  display: flex;\n  align-items: center;\n  margin-bottom: 3px;\n\n  h2 {\n    font-size: 16px;\n  }\n\n  span {\n    font-size: 14px;\n    color: ${({ theme }) => theme.message.textSecondary};\n    margin-left: 6px;\n  }\n`\n\nexport const Content = styled.p`\n  font-size: 16px;\n  padding-right: 20px;\n  font-family: 'archiaregular';\n  word-break: break-word;\n\n  img {\n    border-radius: 14px;\n    margin-top: 4px;\n    width: 100%;\n    max-width: 320px;\n  }\n`\n","import React from 'react'\nimport moment from 'moment'\n\nimport {\n  MessageContainer,\n  Avatar,\n  MessageInfo,\n  Heading,\n  Content\n} from './message.styles'\n\nconst timeFromNow = timestamp => {\n  if (timestamp) return moment(timestamp.toDate()).fromNow(true)\n  else return 'just now'\n}\n\nconst Message = ({ message = {} }) => {\n  const { content, timestamp, user, image } = message\n\n  return (\n    <MessageContainer>\n      <Avatar>\n        <img src={user.avatar} alt=\"avatar\" />\n      </Avatar>\n      <MessageInfo>\n        <Heading>\n          <h2>{user.name}</h2> <span>{`${timeFromNow(timestamp)} ago`}</span>\n        </Heading>\n        <Content image={!!image}>\n          {content || <img src={image} alt=\"message-attachment\" />}\n        </Content>\n      </MessageInfo>\n    </MessageContainer>\n  )\n}\n\nexport default Message\n","import styled from 'styled-components'\n\nexport const TypingUsersContainer = styled.div`\n  margin-top: 14px;\n  width: 100%;\n  border-radius: 99px;\n  overflow: hidden;\n  display: flex;\n\n  > :nth-child(n) {\n    margin-right: 10px;\n  }\n\n  > :last-child {\n    margin-right: 0px;\n  }\n`\n\nexport const User = styled.div`\n  border-radius: 99px;\n  padding: 8px;\n  background: ${({ theme }) => theme.typingUsers.itemBg};\n  display: flex;\n  align-items: center;\n  width: fit-content;\n\n  span {\n    color: ${({ theme }) => theme.typingUsers.text};\n    font-family: 'archiasemibold';\n    font-size: 13px;\n    margin-right: 2px;\n  }\n`\n\nexport const Dot = styled.div`\n  @keyframes blink {\n    from {\n      opacity: 1;\n    }\n    to {\n      opacity: 0.25;\n    }\n  }\n\n  width: 8px;\n  height: 8px;\n  border-radius: 10px;\n  margin-left: 4px;\n  background: #6c757d;\n  animation: blink 800ms infinite alternate;\n`\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { TypingUsersContainer, User, Dot } from './typing-users.styles'\n\nimport { selectCurrentUser } from '../../redux/user/user.selectors'\nimport { selectCurrentChannel } from '../../redux/chat/chat.selectors'\n\nimport { database } from '../../firebase/firebase.utils'\n\nclass TypingUsers extends React.Component {\n  state = {\n    typingRef: database.ref('typing'),\n    connectedRef: database.ref('.info/connected'),\n    typing: {}\n  }\n\n  componentDidMount() {\n    const { typingRef, connectedRef } = this.state\n    const { currentUser } = this.props\n\n    typingRef.on('value', snapshot => {\n      this.setState({\n        typing: snapshot.val()\n      })\n    })\n\n    connectedRef.on('value', snapshot => {\n      if (snapshot.val() === true) {\n        const { currentChannel } = this.props\n\n        typingRef\n          .child(currentChannel.id)\n          .child(currentUser.uid)\n          .onDisconnect()\n          .remove(err => {\n            if (err) console.error(err)\n          })\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    const { typingRef, connectedRef } = this.state\n    // removing listener\n    typingRef.off()\n    connectedRef.off()\n  }\n\n  getTypingUsers = channelId => {\n    const { typing } = this.state\n    const { currentUser } = this.props\n\n    if (typing && typing[channelId]) {\n      const channel = typing[channelId]\n      // user names typing in channel\n      return Object.keys(channel)\n        .filter(userId => currentUser.uid !== userId)\n        .map(userId => channel[userId])\n    } else {\n      return []\n    }\n  }\n\n  render() {\n    const { currentChannel } = this.props\n\n    return (\n      <>\n        {this.getTypingUsers(currentChannel.id).length ? (\n          <TypingUsersContainer>\n            {this.getTypingUsers(currentChannel.id).map((user, index) => (\n              <User key={index}>\n                <span>{user} </span>\n                <Dot style={{ animationDelay: '100ms' }} />\n                <Dot style={{ animationDelay: '300ms' }} />\n                <Dot style={{ animationDelay: '500ms' }} />\n              </User>\n            ))}\n          </TypingUsersContainer>\n        ) : null}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  currentChannel: selectCurrentChannel\n})\n\nexport default connect(mapStateToProps)(TypingUsers)\n","import React from 'react'\nimport { createStructuredSelector } from 'reselect'\nimport { connect } from 'react-redux'\n\nimport {\n  MessagesContainer,\n  Container,\n  TypingContainer,\n  EmptyPlaceholder\n} from './messages.styles'\n\nimport Message from '../message/message.component'\nimport Spinner from '../spinner/spinner.component'\nimport TypingUsers from '../typing-users/typing-users.component'\n\nimport { updateChannelMembers } from '../../redux/chat/chat.actions'\nimport { selectMessageSearchFilters } from '../../redux/chat/chat.selectors'\n\nimport { firestore } from '../../firebase/firebase.utils'\n\nclass Messages extends React.Component {\n  state = {\n    messageListeners: {},\n    messages: {},\n    loading: true\n  }\n\n  componentDidUpdate() {\n    const { currentChannel, currentUser } = this.props\n\n    if (currentChannel && currentUser) {\n      this.addListeners(currentChannel.id, currentChannel.type)\n    }\n\n    // scroll messages to bottom\n    if (this.messagesEnd) {\n      this.scrollToBottom()\n    }\n  }\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView()\n  }\n\n  componentWillUnmount() {\n    this.removeListeners()\n  }\n\n  filterMessages = messages => {\n    const { filters } = this.props\n    const regex = new RegExp(filters.text, 'gi')\n\n    if (messages) {\n      const searchResults = messages.reduce((acc, message) => {\n        if (\n          message.content &&\n          (message.content.match(regex) || message.user.name.match(regex))\n        ) {\n          acc.push(message)\n        } else if (message.image && message.user.name.match(regex)) {\n          acc.push(message)\n        }\n        return acc\n      }, [])\n\n      return searchResults\n    }\n\n    return []\n  }\n\n  addListeners = (channelId, channelType) => {\n    const { messageListeners } = this.state\n\n    if (!messageListeners[channelId]) {\n      let messagesRef = null\n\n      if (channelType === 'direct') {\n        // add listener for direct channel\n        messagesRef = firestore.collection(`directMessages/${channelId}`)\n      } else {\n        // add listener for public channel\n        messagesRef = firestore\n          .collection('channels')\n          .doc(channelId)\n          .collection('messages')\n      }\n\n      messagesRef = messagesRef.orderBy('timestamp', 'asc')\n\n      const messageListener = messagesRef.onSnapshot(snapshot => {\n        const channelMessages = snapshot.docs.map(message => message.data())\n\n        this.setState(({ messages }) => ({\n          messages: { ...messages, [channelId]: channelMessages },\n          loading: false\n        }))\n      })\n\n      // adding listener\n      this.setState(({ messageListeners }) => ({\n        messageListeners: {\n          ...messageListeners,\n          [channelId]: messageListener\n        },\n        loading: true\n      }))\n    } else {\n      // already listening\n      const { messages } = this.state\n      const { updateMembers, currentChannel } = this.props\n\n      if (currentChannel && messages[currentChannel.id]) {\n        updateMembers({\n          count: this.countUniqueMembers(messages[currentChannel.id]),\n          members: this.getDetailsForMembers(messages[currentChannel.id])\n        })\n      }\n    }\n  }\n\n  removeListeners = () => {\n    const { messageListeners } = this.state\n    Object.keys(messageListeners).forEach(listener => {\n      messageListeners[listener]()\n    })\n  }\n\n  displayMessages = (messages = []) => {\n    const { currentUser } = this.props\n\n    return messages.map((message, i) => {\n      const ownMessage = currentUser.uid === message.user.id\n      return <Message key={i} message={message} ownMessage={ownMessage} />\n    })\n  }\n\n  countUniqueMembers = (messages = []) => {\n    const uniqueMembers = messages.reduce((acc, message) => {\n      if (!acc.includes(message.user.id)) {\n        acc.push(message.user.id)\n      }\n      return acc\n    }, [])\n\n    return uniqueMembers.length\n  }\n\n  getDetailsForMembers = (messages = []) => {\n    const members = {}\n    console.log(messages)\n\n    messages.forEach(message => {\n      const {\n        user: { id, name, avatar }\n      } = message\n      members[id] = {\n        name,\n        avatar,\n        messagesCount:\n          members[id] && members[id]['messagesCount']\n            ? members[id]['messagesCount'] + 1\n            : 1\n      }\n    })\n\n    return Object.keys(members)\n      .map(userId => ({\n        ...members[userId],\n        id: userId\n      }))\n      .sort((prev, next) => {\n        if (prev.messagesCount > next.messagesCount) return -1\n        else if (prev.messagesCount < next.messagesCount) return 1\n        else return 0\n      })\n  }\n\n  render() {\n    const { messages, loading } = this.state\n    const { currentChannel } = this.props\n\n    return (\n      <MessagesContainer>\n        <Container>\n          {currentChannel &&\n          messages[currentChannel.id] &&\n          !loading &&\n          !messages[currentChannel.id].length ? (\n            <EmptyPlaceholder>\n              <span>There are no messages to show here :(</span>\n            </EmptyPlaceholder>\n          ) : null}\n          {currentChannel && !loading ? (\n            this.displayMessages(\n              this.filterMessages(messages[currentChannel.id])\n            )\n          ) : (\n            <Spinner style={{ backgroundColor: 'transparent' }} />\n          )}\n          <span ref={node => (this.messagesEnd = node)} />\n        </Container>\n\n        {currentChannel && (\n          <TypingContainer>\n            <TypingUsers />\n          </TypingContainer>\n        )}\n      </MessagesContainer>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  filters: selectMessageSearchFilters\n})\n\nconst mapDispatchToProps = dispatch => ({\n  updateMembers: members => dispatch(updateChannelMembers(members))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages)\n","import styled, { css } from 'styled-components'\n\nconst opacityAnimation = css`\n  @keyframes opacityIn {\n    from {\n      background-color: transparent;\n    }\n    to {\n      visibility: visible;\n      background-color: ${({ theme }) => theme.channels.modal.bg};\n    }\n  }\n\n  @keyframes opacityOut {\n    from {\n      background-color: ${({ theme }) => theme.channels.modal.bg};\n      /* at start showing is false so in \n      order to avoit flicker issue visibility is set dynamically */\n      visibility: ${({ showing }) => (showing ? 'visible' : 'hidden')};\n    }\n    to {\n      visibility: hidden;\n      background-color: transparent;\n    }\n  }\n\n  animation-name: ${({ showing }) => (showing ? 'opacityIn' : 'opacityOut')};\n  animation-duration: 500ms;\n  animation-timing-function: ease-in-out;\n  animation-fill-mode: forwards;\n`\n\nconst scaleAnimation = css`\n  @keyframes scaleIn {\n    from {\n      opacity: 0;\n      transform: scale(0.5);\n    }\n    to {\n      visibility: visible;\n      opacity: 1;\n      transform: scale(1);\n    }\n  }\n\n  @keyframes scaleOut {\n    from {\n      visibility: ${({ showing }) => (showing ? 'visible' : 'hidden')};\n    }\n    to {\n      visibility: hidden;\n      opacity: 0;\n    }\n  }\n\n  animation-name: ${({ showing }) => (showing ? 'scaleIn' : 'scaleOut')};\n  animation-duration: 500ms;\n  animation-timing-function: cubic-bezier(0.19, 0.67, 0.01, 1.3);\n  animation-fill-mode: forwards;\n`\n\nexport const FileModalContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  position: fixed;\n  z-index: 10;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  visibility: hidden;\n\n  ${opacityAnimation}\n`\n\nexport const Modal = styled.form`\n  padding: 20px;\n  border-radius: 12px;\n  visibility: hidden;\n  background: ${({ theme }) => theme.channels.modal.modalBg};\n  display: grid;\n  grid-gap: 16px;\n\n  ${scaleAnimation}\n`\n\nexport const Heading = styled.h2`\n  color: ${({ theme }) => theme.channels.modal.textPrimary};\n  font-size: 20px;\n  font-family: 'archiasemibold';\n`\n\nexport const Inputs = styled.div`\n  display: grid;\n  grid-gap: 10px;\n`\n\nexport const Input = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: auto 80px 0px;\n\n  label {\n    font-family: 'archiasemibold';\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 6px 12px;\n    font-size: 16px;\n    height: 100%;\n    width: 100%;\n    cursor: pointer;\n    border-radius: 0px 8px 8px 0px;\n    color: ${({ theme }) => theme.channels.modal.textSecondary};\n    background-color: ${({ theme }) => theme.channels.modal.textPrimary};\n  }\n\n  span {\n    min-width: 160px;\n    padding: 8px;\n    border: 0px;\n    background-color: ${({ theme }) => theme.channels.modal.bg};\n    color: ${({ theme }) => theme.channels.modal.textPrimary};\n    border-radius: 8px;\n    font-family: 'archiaregular';\n    font-size: 16px;\n  }\n\n  input {\n    width: 0.1px;\n    height: 0.1px;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    z-index: -1;\n\n    &:focus {\n      outline: none;\n    }\n\n    &::placeholder {\n      color: ${({ theme }) => theme.channels.modal.textPrimary};\n    }\n  }\n`\n\nexport const Options = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding-top: 10px;\n`\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  border: 2px solid transparent;\n  font-family: 'archiasemibold';\n  cursor: pointer;\n  outline: none;\n  border-radius: 8px;\n  padding: 6px;\n  min-width: 70px;\n  font-size: 15px;\n\n  &.close {\n    color: ${({ theme }) => theme.channels.modal.textPrimary};\n    background-color: ${({ theme }) => theme.channels.modal.textSecondary};\n    border: 2px solid ${({ theme }) => theme.channels.modal.textPrimary};\n  }\n\n  &.confirm {\n    color: ${({ theme }) => theme.channels.modal.textSecondary};\n    background-color: ${({ theme }) => theme.channels.modal.textPrimary};\n  }\n`\n","import React from 'react'\n\nimport {\n  FileModalContainer,\n  Modal,\n  Heading,\n  Inputs,\n  Input,\n  Options,\n  Button\n} from './file-upload-modal.styles'\n\nclass FileUploadModal extends React.Component {\n  state = {\n    file: null\n  }\n\n  handlePropogation = event => {\n    event.stopPropagation()\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    const { file } = this.state\n    const { confirm } = this.props\n    confirm(file)\n  }\n\n  handleChange = event => {\n    const files = event.target.files\n    const file = files && files.length ? files[0] : null\n    this.setState({\n      file\n    })\n  }\n\n  render() {\n    const { file } = this.state\n    const { showing, close } = this.props\n\n    return (\n      <FileModalContainer showing={showing} onClick={close}>\n        <Modal\n          onClick={this.handlePropogation}\n          onSubmit={this.handleSubmit}\n          showing={showing}\n        >\n          <Heading>Add a file</Heading>\n          <Inputs>\n            <Input>\n              <span>{file ? file.name : 'select a file'}</span>\n              <label htmlFor=\"file\">choose</label>\n              <input\n                type=\"file\"\n                name=\"file\"\n                id=\"file\"\n                accept=\"image/*\"\n                onChange={this.handleChange}\n              />\n            </Input>\n          </Inputs>\n          <Options>\n            <Button className=\"close\" type=\"button\" onClick={close}>\n              CANCEL\n            </Button>\n            <Button className=\"confirm\" type=\"submit\">\n              UPLOAD\n            </Button>\n          </Options>\n        </Modal>\n      </FileModalContainer>\n    )\n  }\n}\n\nexport default FileUploadModal\n","import styled, { css } from 'styled-components'\nimport { Picker } from 'emoji-mart'\n\nconst iconCSS = css`\n  height: 100%;\n  width: 60px;\n  position: absolute;\n  right: 0;\n  top: 0;\n  border-radius: 14px 0px 0px 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 22px;\n  opacity: 0.7;\n  cursor: pointer;\n  transition: ease all 100ms;\n  outline: none;\n  border: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`\n\nexport const EmojiPickerContainer = styled.div`\n  position: absolute;\n  right: 0;\n  top: -370px;\n\n  .emoji-mart-preview {\n    display: none;\n  }\n`\n\nexport const MessageInputContainer = styled.form`\n  width: 100%;\n  height: 60px;\n  border-radius: 14px;\n  position: relative;\n`\n\nexport const InputField = styled.input`\n  width: 100%;\n  height: 100%;\n  border-radius: 14px;\n  padding: 14px 134px 14px 44px;\n  background-color: ${({ theme }) => theme.messageInput.bg};\n  border: 0px;\n  color: ${({ theme }) => theme.messageInput.text};\n  font-family: 'archiaregular';\n  font-size: 18px;\n\n  &::placeholder {\n    color: ${({ theme }) => theme.messageInput.placeholder};\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0px 0px 0px 2px ${({ theme }) => theme.messageInput.outline};\n  }\n`\n\nexport const AttachIcon = styled.button`\n  color: ${({ theme }) => theme.messageInput.attachFg};\n  ${iconCSS}\n  background: transparent;\n  left: 0;\n  right: none;\n  font-size: 28px;\n  width: 40px;\n  padding-left: 10px;\n\n  &:disabled {\n    cursor: wait;\n  }\n`\n\nexport const EmojiIcon = styled.button`\n  background-color: ${({ theme }) => theme.messageInput.emojiBg};\n  ${iconCSS}\n  right: 60px;\n`\n\nexport const SendIcon = styled.button`\n  background-color: ${({ theme }) => theme.messageInput.sendBg};\n  color: ${({ theme }) => theme.messageInput.sendFg};\n  ${iconCSS}\n\n  &:disabled {\n    cursor: wait;\n  }\n\n  border-radius: 0px 14px 14px 0px;\n`\n\nexport const Spinner = styled.div`\n  @keyframes spin {\n    from {\n      transform: rotate(-45deg);\n    }\n    to {\n      transform: rotate(315deg);\n    }\n  }\n\n  width: 22px;\n  height: 22px;\n  border: 3px solid ${({ theme }) => theme.messageInput.sendFg};\n  border-right: 3px solid transparent;\n  border-radius: 20px;\n  animation: linear spin 1s infinite;\n`\n\nexport const ProgressBar = styled.progress`\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  height: 100%;\n  width: 100%;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  opacity: 0.8;\n\n  &[value]::-webkit-progress-bar {\n    background: transparent;\n    border-radius: 14px;\n  }\n\n  &[value]::-webkit-progress-value {\n    background: ${({ theme }) => theme.messageInput.progress};\n    border-radius: 14px;\n  }\n`\n\nexport const EmojiPicker = styled(Picker)``\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { MdSend, MdAttachFile } from 'react-icons/md'\n\nimport FileUploadModal from '../file-upload-modal/file-upload-modal.component'\n\nimport 'emoji-mart/css/emoji-mart.css'\nimport { emojiIndex } from 'emoji-mart'\n\nimport {\n  Container,\n  MessageInputContainer,\n  InputField,\n  AttachIcon,\n  EmojiIcon,\n  EmojiPicker,\n  SendIcon,\n  Spinner,\n  ProgressBar,\n  EmojiPickerContainer\n} from './message-input.styles'\n\nimport firebase, {\n  firestore,\n  storage,\n  database\n} from '../../firebase/firebase.utils'\n\nimport { selectCurrentTheme } from '../../redux/theme/theme.selectors'\n\nclass MessageInput extends React.Component {\n  state = {\n    channelsRef: firestore.collection('channels'),\n    storageRef: storage.ref(),\n    typingRef: database.ref('typing'),\n    uploadeState: '',\n    uploadTask: null,\n    percentUploaded: 0,\n    message: '',\n    loading: false,\n    errors: [],\n    modal: false,\n    emojiPicker: false\n  }\n\n  componentWillUnmount() {\n    if (this.state.uploadTask !== null) {\n      this.state.uploadTask.cancel()\n      this.setState({\n        uploadTask: null\n      })\n    }\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.sendMessage()\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  sendMessage = () => {\n    const { message, loading, typingRef } = this.state\n    const { currentUser, currentChannel } = this.props\n\n    if (!message || loading) return\n\n    this.setState({ loading: true })\n\n    const [ref, messageRef] = this.getMessageRef()\n\n    ref\n      .set(this.createMessage({ id: messageRef.id }))\n      .then(() => {\n        this.setState({ loading: false, message: '' })\n        typingRef.child(currentChannel.id).child(currentUser.uid).remove()\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState(({ errors }) => ({\n          errors: errors.concat(err),\n          loading: false\n        }))\n      })\n  }\n\n  getMessageRef = () => {\n    // return message ref according to public or private channel\n    const { currentChannel } = this.props\n    const { channelsRef } = this.state\n\n    let ref = null\n    let messageRef = null\n\n    if (currentChannel.type === 'direct') {\n      const directMessagesRef = firestore.collection(\n        `directMessages/${currentChannel.id}`\n      )\n      messageRef = directMessagesRef.doc()\n      ref = directMessagesRef.doc(messageRef.id)\n    } else {\n      // getting snapshot id first\n      messageRef = channelsRef\n        .doc(currentChannel.id)\n        .collection('messages')\n        .doc()\n      // setting ref to public channel\n      ref = channelsRef\n        .doc(currentChannel.id)\n        .collection('messages')\n        .doc(messageRef.id)\n    }\n\n    return [ref, messageRef]\n  }\n\n  handleConfirm = file => {\n    this.setState({\n      modal: false\n    })\n    this.uploadeFile(file)\n    console.log('confirmed', file)\n  }\n\n  handleClose = () => {\n    this.setState({\n      modal: false\n    })\n    console.log('closed')\n  }\n\n  createMessage = ({ id, fileUrl }) => {\n    const { message } = this.state\n    const { currentUser } = this.props\n\n    const createdMessage = {\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      id,\n      user: {\n        id: currentUser.uid,\n        name: currentUser.displayName,\n        avatar: currentUser.photoURL\n      }\n    }\n\n    if (fileUrl != null) {\n      createdMessage['image'] = fileUrl\n    } else {\n      createdMessage['content'] = message\n    }\n\n    return createdMessage\n  }\n\n  getPath = () => {\n    const { currentChannel } = this.props\n    if (currentChannel && currentChannel.type === 'direct') {\n      return `chat/private/${currentChannel.id}`\n    } else {\n      return 'chat/public'\n    }\n  }\n\n  uploadeFile = file => {\n    const { storageRef } = this.state\n    const { currentChannel } = this.props\n    const pathToUpload = currentChannel.id\n    const filePath = `${this.getPath()}/${uuidv4()}.jpg`\n\n    this.setState(\n      {\n        uploadState: 'uploading',\n        uploadTask: storageRef.child(filePath).put(file)\n      },\n      () => {\n        this.state.uploadTask.on(\n          'state_changed',\n          snap => {\n            const percentUploaded = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            )\n            this.setState({ percentUploaded })\n          },\n          err => {\n            console.error(err)\n\n            this.setState({\n              errors: this.state.errors.concat(err),\n              uploadState: 'error',\n              uploadTask: null\n            })\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(downloadUrl => {\n                this.sendFileMessage(downloadUrl, pathToUpload)\n              })\n              .catch(err => {\n                console.error(err)\n                this.setState(({ errors, uploadState, uploadTask }) => ({\n                  errors: errors.concat(err),\n                  uploadState: 'error',\n                  uploadTask: null\n                }))\n              })\n          }\n        )\n      }\n    )\n  }\n\n  sendFileMessage = (fileUrl, pathToUpload) => {\n    const [ref, messageRef] = this.getMessageRef()\n\n    ref\n      .set(this.createMessage({ id: messageRef.id, fileUrl }))\n      .then(() => {\n        this.setState({\n          uploadState: 'done'\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState(({ errors }) => ({\n          errors: errors.concat(err)\n        }))\n      })\n  }\n\n  handleKeyDown = () => {\n    const { message, typingRef } = this.state\n    const { currentChannel, currentUser } = this.props\n\n    if (currentChannel && message.length > 1) {\n      typingRef\n        .child(currentChannel.id)\n        .child(currentUser.uid)\n        .set(currentUser.displayName)\n    } else if (currentChannel && currentUser) {\n      typingRef.child(currentChannel.id).child(currentUser.uid).remove()\n    }\n  }\n\n  handleTogglePicker = () => {\n    this.setState(({ emojiPicker }) => ({\n      emojiPicker: !emojiPicker\n    }))\n  }\n\n  colonsToUnicode = message => {\n    return message.replace(/:[A-Za-z0-9_+-]+:/g, x => {\n      x = x.replace(/:/g, '')\n      let emoji = emojiIndex.emojis[x]\n      if (typeof emoji !== 'undefined') {\n        let unicode = emoji.native\n        if (typeof unicode !== 'undefined') {\n          return unicode\n        }\n      }\n      x = `:${x}:`\n      return x\n    })\n  }\n\n  handleAddEmoji = emoji => {\n    const { message } = this.state\n    const newMessage = this.colonsToUnicode(`${message}${emoji.colons}`)\n    this.setState(\n      {\n        message: newMessage,\n        emojiPicker: false\n      },\n      () => this.messageInputRef.focus()\n    )\n  }\n\n  render() {\n    const {\n      message,\n      loading,\n      modal,\n      percentUploaded,\n      uploadState,\n      emojiPicker\n    } = this.state\n    const { currentChannel, theme } = this.props\n\n    return (\n      <Container>\n        <EmojiPickerContainer>\n          {emojiPicker && (\n            <EmojiPicker\n              className=\"emojipicker\"\n              set=\"twitter\"\n              title=\"Pick an emoji\"\n              emoji=\"point_up\"\n              onSelect={this.handleAddEmoji}\n              style={{\n                width: '320px'\n              }}\n              theme={theme.name === 'dark' ? 'dark' : 'light'}\n              themeObj={theme}\n              color=\"#007BFF\"\n            />\n          )}\n        </EmojiPickerContainer>\n        <FileUploadModal\n          showing={modal}\n          confirm={this.handleConfirm}\n          close={this.handleClose}\n        />\n        <MessageInputContainer onSubmit={this.handleSubmit}>\n          {uploadState === 'uploading' ? (\n            <ProgressBar type=\"progress\" max=\"100\" value={percentUploaded} />\n          ) : null}\n          <InputField\n            ref={node => (this.messageInputRef = node)}\n            required\n            type=\"text\"\n            name=\"message\"\n            onChange={this.handleChange}\n            onKeyDown={this.handleKeyDown}\n            value={message}\n            autocomplete=\"off\"\n            placeholder={\n              currentChannel && currentChannel.name\n                ? `message ${currentChannel.type === 'direct' ? '@' : '#'}${\n                    currentChannel.name\n                  }`\n                : 'message'\n            }\n          />\n          <AttachIcon\n            type=\"button\"\n            onClick={() => this.setState({ modal: true })}\n            disabled={uploadState === 'uploading'}\n          >\n            {uploadState === 'uploading' ? <Spinner /> : <MdAttachFile />}\n          </AttachIcon>\n          <EmojiIcon type=\"button\" onClick={this.handleTogglePicker}>\n            <span role=\"img\" aria-label=\"smile\">\n              🙂\n            </span>\n          </EmojiIcon>\n          <SendIcon type=\"submit\" disabled={loading || !currentChannel}>\n            {loading ? <Spinner /> : <MdSend />}\n          </SendIcon>\n        </MessageInputContainer>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  theme: selectCurrentTheme\n})\n\nexport default connect(mapStateToProps)(MessageInput)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { MessagesPanelContainer } from './messages-panel.styles'\n\nimport ChannelHeader from '../channel-header/channel-header.component'\nimport Messages from '../messages/messages.component'\nimport MessageInput from '../message-input/message-input.component'\n\nimport { selectCurrentUser } from '../../redux/user/user.selectors'\nimport { selectCurrentChannel } from '../../redux/chat/chat.selectors'\n\nconst MessagesPanel = ({ currentUser, currentChannel }) => {\n  return (\n    <MessagesPanelContainer>\n      <ChannelHeader\n        currentUser={currentUser}\n        currentChannel={currentChannel}\n      />\n      {/* <div style={{ background: 'red' }} /> */}\n      <Messages currentUser={currentUser} currentChannel={currentChannel} />\n      <MessageInput currentUser={currentUser} currentChannel={currentChannel} />\n    </MessagesPanelContainer>\n  )\n}\n\nconst mapStatToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  currentChannel: selectCurrentChannel\n})\n\nexport default connect(mapStatToProps)(MessagesPanel)\n","import styled from 'styled-components'\n\nexport const MetaPanelContainer = styled.div`\n  width: 100%;\n  max-width: 280px;\n  height: 100%;\n  padding: 14px 14px 14px 0px;\n  transition: ease-in-out transform 200ms;\n\n  @media only screen and (max-width: 1100px) {\n    padding: 0px;\n    position: fixed;\n    z-index: 10;\n    top: 0;\n    right: 0;\n    width: 280px;\n    background-color: ${({ theme }) => theme.meta.bg};\n    box-shadow: 0px 0px 10px 5px ${({ theme }) => theme.meta.shadow};\n    transform: ${({ metaShowing }) =>\n      metaShowing ? 'translateX(0px)' : 'translateX(300px)'};\n  }\n`\n\nexport const Meta = styled.div`\n  height: 100%;\n  width: 100%;\n  background-color: ${({ theme }) => theme.meta.bg};\n  border-radius: 14px;\n  padding: 14px 20px;\n\n  @media only screen and (max-width: 1100px) {\n    border-radius: 0px;\n  }\n\n  h2 {\n    font-family: 'archiasemibold';\n    color: ${({ theme }) => theme.meta.textPrimary};\n  }\n\n  p,\n  span {\n    font-family: 'archiaregular';\n    color: ${({ theme }) => theme.meta.textSecondary};\n    font-size: 16px;\n  }\n`\n\nexport const CloseMeta = styled.div`\n  color: ${({ theme }) => theme.meta.closeButton.text};\n  background-color: ${({ theme }) => theme.meta.closeButton.bg};\n  font-family: 'archiabold';\n  padding: 8px;\n  border-radius: 14px;\n  display: flex;\n  align-items: center;\n  margin: 14px 14px 0px 14px;\n\n  span {\n    margin-left: 8px;\n  }\n\n  cursor: pointer;\n\n  @media only screen and (min-width: 1100px) {\n    display: none;\n  }\n`\n\nexport const About = styled.div`\n  margin-bottom: 14px;\n\n  h2 {\n    font-size: 22px;\n  }\n`\n\nexport const CreatedBy = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 4px;\n\n  h2 {\n    font-size: 18px;\n    margin-right: 6px;\n  }\n`\n\nexport const CreatedOn = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 22px;\n\n  h2 {\n    font-size: 18px;\n    margin-right: 6px;\n  }\n`\n\nexport const ActiveMembers = styled.ul`\n  h2 {\n    font-size: 22px;\n    margin-bottom: 10px;\n  }\n\n  > :last-child {\n    margin-bottom: 0px;\n  }\n`\n\nexport const Member = styled.li`\n  display: grid;\n  grid-template-columns: 45px auto;\n  grid-gap: 8px;\n  align-items: center;\n  margin-bottom: 10px;\n\n  h2 {\n    margin-bottom: 0px;\n  }\n\n  img {\n    height: 45px;\n    width: 45px;\n    border-radius: 30px;\n  }\n`\n\nexport const Info = styled.div`\n  h2 {\n    font-size: 17px;\n  }\n\n  span {\n    font-size: 14px;\n  }\n`\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport moment from 'moment'\n\nimport {\n  selectCurrentChannel,\n  selectChannelMembers,\n  selectIsPrivateChannel,\n  selectMetaShowing\n} from '../../redux/chat/chat.selectors'\n\nimport { toggleMeta } from '../../redux/chat/chat.actions'\n\nimport {\n  MetaPanelContainer,\n  Meta,\n  About,\n  CreatedBy,\n  CreatedOn,\n  ActiveMembers,\n  Member,\n  Info,\n  CloseMeta\n} from './meta-panel.styles'\n\nimport { FaArrowRight } from 'react-icons/fa'\n\nconst formatTime = timestamp =>\n  moment(timestamp.toDate()).format('Do MMM, YYYY')\n\nconst MetaPanel = ({\n  currentChannel,\n  channelMembers,\n  isPrivateChannel,\n  metaShowing,\n  toggleMeta\n}) => {\n  return (\n    <MetaPanelContainer metaShowing={metaShowing}>\n      <CloseMeta onClick={() => toggleMeta(false)}>\n        <FaArrowRight />\n        <span>CLOSE</span>\n      </CloseMeta>\n      <Meta>\n        {currentChannel && !isPrivateChannel ? (\n          <>\n            <About>\n              <h2>About #{currentChannel.name}</h2>\n              <p>{currentChannel.details}</p>\n            </About>\n            <CreatedBy>\n              <h2>created by</h2>\n              <span>@{currentChannel.createdBy.name}</span>\n            </CreatedBy>\n            <CreatedOn>\n              <h2>created on</h2>\n              <span>{formatTime(currentChannel.createdAt)}</span>\n            </CreatedOn>\n          </>\n        ) : null}\n\n        {channelMembers &&\n        !isPrivateChannel &&\n        channelMembers.members.length ? (\n          <ActiveMembers>\n            <h2>Active Members</h2>\n            {channelMembers.members.map(\n              ({ name, avatar, messagesCount }, index) => (\n                <Member key={index}>\n                  <img src={avatar} alt=\"avatar\" />\n                  <Info>\n                    <h2>{name}</h2>\n                    <span>\n                      {messagesCount}{' '}\n                      {messagesCount > 1 ? 'messages' : 'message'}{' '}\n                    </span>\n                  </Info>\n                </Member>\n              )\n            )}\n          </ActiveMembers>\n        ) : null}\n      </Meta>\n    </MetaPanelContainer>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentChannel: selectCurrentChannel,\n  channelMembers: selectChannelMembers,\n  isPrivateChannel: selectIsPrivateChannel,\n  metaShowing: selectMetaShowing\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleMeta: boolean => dispatch(toggleMeta(boolean))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MetaPanel)\n","import React from 'react'\n\nimport { AppContainer } from './app.styles'\n\nimport SidePanel from '../../components/side-panel/side-panel.component'\nimport MessagesPanel from '../../components/messages-panel/messages-panel.component'\nimport MetaPanel from '../../components/meta-panel/meta-panel.component'\n\nconst App = () => {\n  return (\n    <AppContainer>\n      <SidePanel />\n      <MessagesPanel />\n      <MetaPanel />\n    </AppContainer>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport { ThemeProvider } from 'styled-components'\nimport { selectCurrentTheme } from '../../redux/theme/theme.selectors'\n\nconst CustomThemeProvider = ({ children, currentTheme, ...props }) => (\n  <ThemeProvider theme={currentTheme} {...props}>\n    {children}\n  </ThemeProvider>\n)\n\nconst mapStateToProps = createStructuredSelector({\n  currentTheme: selectCurrentTheme\n})\n\nexport default connect(mapStateToProps)(CustomThemeProvider)\n","import styled from 'styled-components'\n\nexport const RegisterPageContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  background-color: ${({ theme }) => theme.bg};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n`\n\nexport const RegisterFormContainer = styled.div`\n  display: grid;\n  grid-gap: 20px;\n  justify-content: center;\n  justify-items: center;\n  align-items: center;\n  max-width: 450px;\n`\n\nexport const Heading = styled.h1`\n  font-family: 'archiasemibold';\n  color: ${({ theme }) => theme.form.headingText};\n  padding-left: 6px;\n  width: 340px;\n`\n\nexport const RegisterForm = styled.form`\n  background-color: ${({ theme }) => theme.form.bg};\n  padding: 22px;\n  border-radius: 20px;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.1);\n  display: grid;\n  grid-gap: 14px;\n  width: 340px;\n\n  button {\n    margin-top: 16px;\n  }\n`\nexport const LoginMessageContainer = styled.div`\n  font-family: 'archiasemibold';\n  display: flex;\n  justify-content: center;\n  div {\n    color: ${({ theme }) => theme.text};\n    span {\n      margin-right: 2px;\n    }\n  }\n`\n","import styled from 'styled-components'\n\nexport const Button = styled.button`\n  border: 0px;\n  background-color: ${({ theme, disabled }) =>\n    disabled ? theme.button.bgDisabled : theme.button.bg};\n  color: ${({ theme }) => theme.button.text};\n  padding: 6px;\n  font-family: 'archiasemibold';\n  font-size: ${({ fontSize }) => fontSize};\n  width: 100%;\n  height: ${({ height }) => (height ? height : '28px')};\n  padding: ${({ padding }) => padding};\n  cursor: pointer;\n  border-radius: 9999px;\n  border: 3px solid transparent;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n\n  /* &:hover {\n    border: 2px solid ${({ theme }) => theme.button.bg};\n    background-color: ${({ theme }) => theme.button.text};\n    color: ${({ theme }) => theme.button.bg};\n  } */\n\n  &:focus {\n    outline: none;\n    border: 3px dashed ${({ theme }) => theme.button.text};\n  }\n`\nexport const Spinner = styled.div`\n  @keyframes spin {\n    from {\n      transform: rotate(-45deg);\n    }\n    to {\n      transform: rotate(315deg);\n    }\n  }\n\n  width: 28px;\n  height: 28px;\n  border: 4px solid ${({ theme }) => theme.button.bg};\n  border-right: 4px solid transparent;\n  border-radius: 20px;\n  animation: linear spin 1s infinite;\n`\n","import React from 'react'\nimport { Button, Spinner } from './custom-button.styles'\n\nconst CustomButton = ({ children, loading, ...props }) => {\n  return <Button {...props}>{loading ? <Spinner /> : children}</Button>\n}\n\nexport default CustomButton\n","import styled, { css } from 'styled-components'\n\nconst errorStyles = css`\n  box-shadow: 0px 0px 0px 3px ${({ theme }) => theme.form.error.placeholder};\n  background-color: ${({ theme }) => theme.form.error.bg};\n  color: ${({ theme }) => theme.form.error.text};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.form.error.placeholder};\n  }\n`\n\nexport const InputContainer = styled.div`\n  width: 100%;\n  position: relative;\n`\n\nexport const Input = styled.input`\n  background-color: ${({ theme }) => theme.form.field.bg};\n  border-radius: 16px;\n  width: 100%;\n  height: 100%;\n  border: 0px;\n  font-family: 'archiasemibold';\n  font-size: ${({ fontSize }) => fontSize || '18px'};\n  color: ${({ theme }) => theme.form.field.text};\n  padding: 14px 20px;\n  padding-left: ${({ Icon }) => (Icon ? '56px' : '20px')};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.form.field.placeholder};\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0px 0px 0px 3px\n      ${({ theme, error }) =>\n        error ? theme.form.error.text : theme.form.field.focusBorder};\n  }\n\n  ${({ error }) => (error ? errorStyles : '')}\n\n  /* Change Autocomplete styles in Chrome*/\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover, \n  &:-webkit-autofill:focus {\n    -webkit-text-fill-color: ${({ theme }) => theme.form.field.text};\n  }\n`\n\nexport const InputIconContainer = styled.span`\n  height: 100%;\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0px 18px;\n`\n","import React from 'react'\nimport { useTheme } from 'styled-components'\n\nimport {\n  Input,\n  InputContainer,\n  InputIconContainer\n} from './custom-input.styles'\n\nconst CustomInput = ({ iconSize, Icon, error, ...props }) => {\n  const theme = useTheme()\n\n  return (\n    <InputContainer>\n      <InputIconContainer>\n        {Icon ? (\n          <Icon\n            color={error ? theme.form.error.placeholder : theme.form.field.icon}\n            size={iconSize || 24}\n          />\n        ) : (\n          ''\n        )}\n      </InputIconContainer>\n      <Input {...props} error={error} Icon={Icon} />\n    </InputContainer>\n  )\n}\n\nexport default CustomInput\n","import styled from 'styled-components'\n\nexport const FormErrorContainer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.form.error.bg};\n  color: ${({ theme }) => theme.form.error.text};\n  font-family: 'archiasemibold';\n  border-radius: 16px;\n  padding: 20px;\n  text-align: center;\n`\n\nexport const Heading = styled.h2`\n  font-size: 22px;\n`\n\nexport const Error = styled.p`\n  font-family: 'archiaregular';\n  font-size: 16px;\n  margin-top: 4px;\n`\n","import React from 'react'\n\nimport { FormErrorContainer, Heading, Error } from './form.error.styles'\n\nconst FormError = ({ errors = [{ message: 'some error occured' }] }) => {\n  return (\n    <FormErrorContainer>\n      <Heading>Error</Heading>\n      {errors.map((error, i) => (\n        <Error key={i}>{error.message}</Error>\n      ))}\n    </FormErrorContainer>\n  )\n}\n\nexport default FormError\n","import styled from 'styled-components'\nimport { Link as RouterLink } from 'react-router-dom'\n\nexport const Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.link.text};\n  text-decoration: none;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.link.bg};\n  }\n\n  &:visited {\n    color: ${({ theme }) => theme.link.text};\n  }\n`\n","import React from 'react'\nimport { Link } from './custom-link.styles'\n\nconst CustomLink = ({ children, ...props }) => {\n  return <Link {...props}>{children}</Link>\n}\n\nexport default CustomLink\n","const blobFromBase64String = base64String => {\n  const byteArray = Uint8Array.from(\n    atob(base64String)\n      .split('')\n      .map(char => char.charCodeAt(0))\n  )\n  return new Blob([byteArray], { type: 'image/jpg' })\n}\n\nconst avatarB64 =\n  ''\n\nexport default blobFromBase64String(avatarB64)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { auth, firestore, storage } from '../../firebase/firebase.utils'\n\nimport {\n  RegisterPageContainer,\n  RegisterFormContainer,\n  RegisterForm,\n  Heading,\n  LoginMessageContainer\n} from './register.styles'\n\nimport CustomButton from '../../components/custom-button/custom-button.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport FormError from '../../components/form-error/form-error.component'\nimport CustomLink from '../../components/custom-link/custom-link.component'\n\nimport { FaUserAlt, FaLock } from 'react-icons/fa'\nimport { MdEmail } from 'react-icons/md'\n\nimport { setCurrentUser } from '../../redux/user/user.actions'\n\nimport avatarBlob from '../../resources/images/avatar.blob'\n\nclass RegisterPage extends React.Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    errors: [],\n    loading: false,\n    usersRef: firestore.collection('users')\n  }\n\n  isFormValid = () => {\n    const errors = []\n    let error\n\n    if (this.isFormEmpty(this.state)) {\n      error = { message: 'Fill in all fields.' }\n      this.setState({ errors: errors.concat(error) })\n    } else if (!this.isPasswordValid(this.state)) {\n      error = { message: 'Password is invalid.' }\n      this.setState({ errors: errors.concat(error) })\n    } else {\n      return true\n    }\n  }\n\n  isFormEmpty = ({ username, email, password, confirmPassword }) => {\n    return (\n      !username.length ||\n      !email.length ||\n      !password.length ||\n      !confirmPassword.length\n    )\n  }\n\n  isPasswordValid = ({ password, confirmPassword }) => {\n    if (password.length < 6 || confirmPassword.length < 6) return false\n    else if (password !== confirmPassword) return false\n    else return true\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n\n    const { username, email, password, loading } = this.state\n    const { setCurrentUser } = this.props\n\n    if (!this.isFormValid() || loading) return\n\n    this.setState({ errors: [], loading: true })\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then(async createdUser => {\n        console.log(createdUser)\n\n        let avatarURL = null\n\n        try {\n          avatarURL = await this.getAvatarUrl({\n            email,\n            uid: createdUser.user.uid\n          })\n        } catch (err) {\n          console.error(err)\n        }\n\n        createdUser.user\n          .updateProfile({\n            displayName: username,\n            photoURL: avatarURL\n          })\n          .then(() => {\n            this.saveUser(createdUser).then(() => {\n              setCurrentUser({ ...createdUser.user })\n              console.log('user saved')\n              // register success\n            })\n          })\n          .catch(err => {\n            console.error(err)\n            this.setState(({ errors }) => ({\n              errors: errors.concat(err)\n            }))\n          })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState(({ errors }) => ({\n          errors: errors.concat(err)\n        }))\n      })\n      .finally(() => {\n        this.setState({ loading: false })\n      })\n  }\n\n  saveUser = createdUser => {\n    const { usersRef } = this.state\n    const { uid, displayName, photoURL } = createdUser.user\n    return usersRef.doc(uid).set({\n      name: displayName,\n      avatar: photoURL\n    })\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleInputError(errors, inputName) {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n  }\n\n  getAvatarUrl = ({ uid }) => {\n    return new Promise((resolve, reject) => {\n      storage\n        .ref()\n        .child(`avatars/users/${uid}`)\n        .put(avatarBlob, { contentType: 'image/jpeg' })\n        .then(snapshot => {\n          snapshot.ref.getDownloadURL().then(url => resolve(url))\n        })\n        .catch(err => {\n          console.error(err)\n          reject(err)\n        })\n    })\n  }\n\n  render() {\n    const {\n      username,\n      email,\n      password,\n      confirmPassword,\n      errors,\n      loading\n    } = this.state\n\n    return (\n      <RegisterPageContainer>\n        <RegisterFormContainer>\n          <Heading>Register</Heading>\n          <RegisterForm onSubmit={this.handleSubmit}>\n            <CustomInput\n              Icon={FaUserAlt}\n              name=\"username\"\n              placeholder=\"Username\"\n              onChange={this.handleChange}\n              value={username}\n            />\n            <CustomInput\n              Icon={MdEmail}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              onChange={this.handleChange}\n              value={email}\n              error={this.handleInputError(errors, 'email')}\n            />\n            <CustomInput\n              Icon={FaLock}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n              value={password}\n              error={this.handleInputError(errors, 'password')}\n            />\n            <CustomInput\n              Icon={FaLock}\n              type=\"password\"\n              name=\"confirmPassword\"\n              placeholder=\"Confirm Password\"\n              onChange={this.handleChange}\n              value={confirmPassword}\n              error={this.handleInputError(errors, 'password')}\n            />\n            <CustomButton\n              disabled={loading}\n              loading={loading}\n              height=\"50px\"\n              type=\"submit\"\n              fontSize=\"18px\"\n            >\n              Submit\n            </CustomButton>\n          </RegisterForm>\n          {errors.length ? <FormError errors={errors} /> : null}\n          <LoginMessageContainer>\n            <div>\n              <span>Already a user?</span>\n              <CustomLink to=\"/login\">&nbsp;Login&nbsp;</CustomLink>\n            </div>\n          </LoginMessageContainer>\n        </RegisterFormContainer>\n      </RegisterPageContainer>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n})\n\nexport default connect(null, mapDispatchToProps)(RegisterPage)\n","import styled from 'styled-components'\n\nexport const LoginPageContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  background-color: ${({ theme }) => theme.bg};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n`\n\nexport const LoginFormContainer = styled.div`\n  display: grid;\n  grid-gap: 20px;\n  justify-content: center;\n  justify-items: center;\n  align-items: center;\n  max-width: 450px;\n`\n\nexport const Heading = styled.h1`\n  font-family: 'archiasemibold';\n  color: ${({ theme }) => theme.form.headingText};\n  padding-left: 6px;\n  width: 340px;\n`\n\nexport const LoginForm = styled.form`\n  background-color: ${({ theme }) => theme.form.bg};\n  padding: 22px;\n  border-radius: 20px;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.1);\n  display: grid;\n  grid-gap: 14px;\n  width: 340px;\n\n  button {\n    margin-top: 16px;\n  }\n`\nexport const RegisterMessageContainer = styled.div`\n  font-family: 'archiasemibold';\n  display: flex;\n  justify-content: center;\n  div {\n    color: ${({ theme }) => theme.text};\n    span {\n      margin-right: 2px;\n    }\n  }\n`\n","import React from 'react'\nimport { auth } from '../../firebase/firebase.utils'\n\nimport {\n  LoginPageContainer,\n  LoginFormContainer,\n  LoginForm,\n  Heading,\n  RegisterMessageContainer\n} from './login.styles'\n\nimport CustomButton from '../../components/custom-button/custom-button.component'\nimport CustomInput from '../../components/custom-input/custom-input.component'\nimport FormError from '../../components/form-error/form-error.component'\nimport CustomLink from '../../components/custom-link/custom-link.component'\n\nimport { FaLock } from 'react-icons/fa'\nimport { MdEmail } from 'react-icons/md'\n\nclass LoginPage extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    errors: [],\n    loading: false\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    if (!this.isFormValid(this.state)) return\n\n    this.setState({ errors: [], loading: true })\n\n    const { email, password } = this.state\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then(signedInUser => {\n        console.log(signedInUser)\n        // login success\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState(({ errors }) => ({\n          errors: errors.concat(err),\n          loading: false\n        }))\n      })\n  }\n\n  isFormValid = ({ email, password }) => email && password\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleInputError(errors, inputName) {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n  }\n\n  render() {\n    const { email, password, errors, loading } = this.state\n\n    return (\n      <LoginPageContainer>\n        <LoginFormContainer>\n          <Heading>Login</Heading>\n          <LoginForm onSubmit={this.handleSubmit}>\n            <CustomInput\n              Icon={MdEmail}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              onChange={this.handleChange}\n              value={email}\n              error={this.handleInputError(errors, 'email')}\n            />\n            <CustomInput\n              Icon={FaLock}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n              value={password}\n              error={this.handleInputError(errors, 'password')}\n            />\n            <CustomButton\n              disabled={loading}\n              loading={loading}\n              height=\"50px\"\n              type=\"submit\"\n              fontSize=\"18px\"\n            >\n              Submit\n            </CustomButton>\n          </LoginForm>\n\n          {errors.length ? <FormError errors={errors} /> : null}\n\n          <RegisterMessageContainer>\n            <div>\n              <span>Don't have an account?</span>\n              <CustomLink to=\"/register\">&nbsp;Register&nbsp;</CustomLink>\n            </div>\n          </RegisterMessageContainer>\n        </LoginFormContainer>\n      </LoginPageContainer>\n    )\n  }\n}\n\nexport default LoginPage\n","//--COLORS--//\n\nexport const colors = {\n  red: '#FF073A',\n  littleLightRed: 'rgba(255, 7, 58, 0.5)',\n  lightRed: 'rgba(255, 7, 58, 0.12)',\n  green: '#28A745',\n  pastelGreen: '#41F56A',\n  lightGreen: 'rgba(40, 167, 69, 0.12)',\n  blue: '#007BFF',\n  lightBlue: 'rgba(0, 122, 255, 0.12)',\n  gray: '#6C757D',\n  littleLightGray: 'rgba(108, 117, 125, 0.5)',\n  littleLighterGray: 'rgba(108, 117, 125, 0.25)',\n  lightGray: 'rgba(108, 117, 125, 0.12)',\n  veryLightGray: 'rgba(108, 117, 125, 0.06)',\n  black: '#3E3E3E',\n  littleDarkerBlack: '#1E1E1E',\n  darkerBlack: '#141414',\n  white: '#FFFFFF',\n  lightWhite: 'rgba(255, 255, 255, 0.6)',\n  veryLightWhite: 'rgba(255, 255, 255, 0.2)',\n  lightest: '#F9F9FB',\n  yellow: '#FFC400',\n  lightYellow: 'rgba(255, 196, 0, 0.12)'\n}\n\n//--THEMES--//\n\n//--LIGHT--//\nexport const light = {\n  name: 'light',\n  bg: colors.lightest,\n  text: colors.gray,\n  scrollbar: {\n    bg: colors.lightGray,\n    fg: colors.littleLighterGray,\n    fgHover: colors.littleLightGray\n  },\n  sidePanel: {\n    bg: colors.white,\n    shadow: colors.lightBlue,\n    closeButton: {\n      bg: colors.lightBlue,\n      text: colors.blue\n    }\n  },\n  message: {\n    textPrimary: colors.black,\n    textSecondary: colors.littleLightGray\n  },\n  messages: {\n    bg: colors.white,\n    placeholder: colors.littleLightGray\n  },\n  typingUsers: {\n    itemBg: colors.veryLightGray,\n    dot: colors.gray,\n    text: colors.gray\n  },\n  messageInput: {\n    bg: colors.white,\n    attachFg: colors.gray,\n    emojiBg: colors.lightYellow,\n    sendBg: colors.lightBlue,\n    sendFg: colors.blue,\n    placeholder: colors.gray,\n    text: colors.black,\n    outline: colors.blue,\n    errorBg: colors.lightRed,\n    progress: colors.lightGreen\n  },\n  channelHeader: {\n    bg: colors.white,\n    text: colors.black,\n    starIcon: colors.yellow,\n    sidebarIcon: colors.blue,\n    infoIcon: colors.blue,\n    search: {\n      text: colors.gray,\n      placeholder: colors.littleLightGray,\n      bg: colors.lightGray\n    },\n    status: {\n      online: colors.green,\n      offline: colors.red,\n      away: colors.yellow\n    }\n  },\n  userStatusCard: {\n    bg: colors.blue,\n    text: colors.white,\n    subText: colors.lightest,\n    icon: colors.lightest,\n    optionBg: colors.veryLightWhite,\n    statusColors: {\n      online: colors.pastelGreen,\n      offline: colors.red,\n      away: colors.yellow\n    },\n    modal: {\n      bg: colors.lightBlue,\n      modalBg: colors.white,\n      textPrimary: colors.blue,\n      textSecondary: colors.white,\n      buttonPrimary: colors.blue,\n      buttonSeconday: colors.white\n    }\n  },\n  starred: {\n    bg: colors.lightYellow,\n    text: colors.yellow,\n    hover: colors.lightYellow,\n    icon: colors.yellow\n  },\n  channels: {\n    bg: colors.lightBlue,\n    text: colors.blue,\n    hover: colors.lightBlue,\n    icon: colors.blue,\n    modal: {\n      bg: colors.lightBlue,\n      modalBg: colors.white,\n      textPrimary: colors.blue,\n      textSecondary: colors.white,\n      buttonPrimary: colors.blue,\n      buttonSeconday: colors.white\n    },\n    notificationsBg: colors.white,\n    notificationsFg: colors.blue\n  },\n  directMessages: {\n    bg: colors.lightBlue,\n    text: colors.blue,\n    hover: colors.lightBlue,\n    icon: colors.blue,\n    status: {\n      online: colors.green,\n      offline: colors.red,\n      away: colors.yellow\n    }\n  },\n  meta: {\n    bg: colors.white,\n    textPrimary: colors.black,\n    textSecondary: colors.gray,\n    shadow: colors.lightBlue,\n    closeButton: {\n      bg: colors.lightBlue,\n      text: colors.blue\n    }\n  },\n  spinner: {\n    bg: colors.lightest,\n    text: colors.blue,\n    loaderFg: colors.blue,\n    loaderBg: colors.lightBlue\n  },\n  form: {\n    bg: colors.white,\n    headingText: colors.gray,\n    text: colors.gray,\n    field: {\n      icon: colors.gray,\n      text: colors.gray,\n      bg: colors.lightest,\n      placeholder: colors.littleLightGray,\n      focusBorder: colors.blue\n    },\n    error: {\n      bg: colors.lightRed,\n      text: colors.red,\n      placeholder: colors.littleLightRed\n    }\n  },\n  button: {\n    text: colors.white,\n    bg: colors.blue,\n    bgDisabled: colors.lightBlue\n  },\n  link: {\n    bg: colors.lightBlue,\n    text: colors.blue\n  }\n}\n\n//--DARK--//\nexport const dark = {\n  name: 'dark',\n  bg: colors.littleDarkerBlack,\n  text: colors.white,\n  scrollbar: {\n    bg: colors.lightGray,\n    fg: colors.littleLighterGray,\n    fgHover: colors.littleLightGray\n  },\n  sidePanel: {\n    bg: colors.darkerBlack,\n    shadow: colors.lightBlue,\n    closeButton: {\n      bg: colors.lightBlue,\n      text: colors.blue\n    }\n  },\n  message: {\n    textPrimary: colors.white,\n    textSecondary: colors.lightWhite\n  },\n  messages: {\n    bg: colors.darkerBlack,\n    placeholder: colors.lightWhite\n  },\n  typingUsers: {\n    itemBg: colors.littleDarkerBlack,\n    dot: colors.lightWhite,\n    text: colors.lightWhite\n  },\n  messageInput: {\n    bg: colors.darkerBlack,\n    attachFg: colors.lightWhite,\n    emojiBg: colors.lightYellow,\n    sendBg: colors.lightBlue,\n    sendFg: colors.blue,\n    placeholder: colors.lightWhite,\n    text: colors.white,\n    outline: colors.blue,\n    errorBg: colors.lightRed,\n    progress: colors.lightGreen\n  },\n  channelHeader: {\n    bg: colors.darkerBlack,\n    text: colors.white,\n    starIcon: colors.yellow,\n    sidebarIcon: colors.blue,\n    infoIcon: colors.blue,\n    search: {\n      text: colors.white,\n      placeholder: colors.littleWhite,\n      bg: colors.littleDarkerBlack\n    },\n    status: {\n      online: colors.green,\n      offline: colors.red,\n      away: colors.yellow\n    }\n  },\n  userStatusCard: {\n    bg: colors.blue,\n    text: colors.white,\n    subText: colors.lightest,\n    icon: colors.lightest,\n    optionBg: colors.veryLightWhite,\n    statusColors: {\n      online: colors.pastelGreen,\n      offline: colors.red,\n      away: colors.yellow\n    },\n    modal: {\n      bg: colors.lightBlue,\n      modalBg: colors.darkerBlack,\n      textPrimary: colors.blue,\n      textSecondary: colors.littleDarkerBlack,\n      buttonPrimary: colors.blue,\n      buttonSeconday: colors.littleDarkerBlack\n    }\n  },\n  starred: {\n    bg: colors.lightYellow,\n    text: colors.yellow,\n    hover: colors.lightYellow,\n    icon: colors.yellow\n  },\n  channels: {\n    bg: colors.lightBlue,\n    text: colors.blue,\n    hover: colors.lightBlue,\n    icon: colors.blue,\n    modal: {\n      bg: colors.lightBlue,\n      modalBg: colors.darkerBlack,\n      textPrimary: colors.blue,\n      textSecondary: colors.littleDarkerBlack,\n      buttonPrimary: colors.littleDarkerBlack,\n      buttonSeconday: colors.littleDarkerBlack\n    },\n    notificationsBg: colors.white,\n    notificationsFg: colors.blue\n  },\n  directMessages: {\n    bg: colors.lightBlue,\n    text: colors.blue,\n    hover: colors.lightBlue,\n    icon: colors.blue,\n    status: {\n      online: colors.green,\n      offline: colors.red,\n      away: colors.yellow\n    }\n  },\n  meta: {\n    bg: colors.darkerBlack,\n    textPrimary: colors.white,\n    textSecondary: colors.lightWhite,\n    shadow: colors.lightBlue,\n    closeButton: {\n      bg: colors.lightBlue,\n      text: colors.blue\n    }\n  },\n  spinner: {\n    bg: colors.littleDarkerBlack,\n    text: colors.blue,\n    loaderFg: colors.blue,\n    loaderBg: colors.lightBlue\n  },\n  form: {\n    bg: colors.darkerBlack,\n    headingText: colors.white,\n    text: colors.white,\n    field: {\n      icon: colors.white,\n      text: colors.white,\n      bg: colors.littleDarkerBlack,\n      placeholder: colors.gray,\n      focusBorder: colors.blue\n    },\n    error: {\n      bg: colors.lightRed,\n      text: colors.red,\n      placeholder: colors.littleLightRed\n    }\n  },\n  button: {\n    text: colors.darkerBlack,\n    bg: colors.blue,\n    bgDisabled: colors.lightBlue\n  },\n  link: {\n    bg: colors.lightBlue,\n    text: colors.blue\n  }\n}\n\n//--DEFAULT EXPORT--//\nexport default {\n  light,\n  dark\n}\n","import themes from './theme.data'\n\nimport ThemeActionTypes from './theme.types'\n\nconst INITIAL_STATE = {\n  currentTheme: themes['light']\n}\n\nconst themeReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ThemeActionTypes.SET_THEME:\n      return {\n        ...state,\n        currentTheme: themes[action.payload]\n      }\n    default:\n      return state\n  }\n}\n\nexport default themeReducer\n","import UserActionTypes from './user.types'\n\nconst INITIAL_STATE = {\n  currentUser: null,\n  isLoading: true,\n  status: 'online'\n}\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SET_USER_IS_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      }\n    case UserActionTypes.CLEAR_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: null,\n        isLoading: false\n      }\n    case UserActionTypes.SET_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: action.payload,\n        isLoading: false\n      }\n    case UserActionTypes.SET_USER_STATUS:\n      return {\n        ...state,\n        status: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default userReducer\n","import ChatActionTypes from './chat.types'\n\nconst INITIAL_STATE = {\n  currentChannel: null,\n  channels: null,\n  channelMembers: 0,\n  messageSearchFilters: {\n    text: ''\n  },\n  isPrivateChannel: false,\n  otherUsersStatus: {},\n  starredChannels: null,\n  // for small screens\n  sidebarShowing: false,\n  metaShowing: false\n}\n\nconst chatReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ChatActionTypes.SET_CHANNELS:\n      return {\n        ...state,\n        channels: action.payload\n      }\n    case ChatActionTypes.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload\n      }\n    case ChatActionTypes.UPDATE_CHANNEL_MEMBERS:\n      return {\n        ...state,\n        channelMembers: action.payload\n      }\n    case ChatActionTypes.SET_MESSAGE_SEARCH_FILTERS:\n      return {\n        ...state,\n        messageSearchFilters: {\n          ...state.messageSearchFilters,\n          ...action.payload\n        }\n      }\n    case ChatActionTypes.SET_PRIVATE_CHANNEL:\n      return {\n        ...state,\n        isPrivateChannel: action.payload\n      }\n    case ChatActionTypes.SET_OTHER_USERS_STATUS:\n      return {\n        ...state,\n        otherUsersStatus: action.payload\n      }\n    case ChatActionTypes.SET_STARRED_CHANNELS:\n      return {\n        ...state,\n        starredChannels: action.payload\n      }\n    case ChatActionTypes.TOGGLE_SIDEBAR: {\n      const toggled =\n        action.payload !== undefined ? action.payload : !state.sidebarShowing\n      return {\n        ...state,\n        sidebarShowing: toggled\n      }\n    }\n    case ChatActionTypes.TOGGLE_META: {\n      const toggled =\n        action.payload !== undefined ? action.payload : !state.metaShowing\n      return {\n        ...state,\n        metaShowing: toggled\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport default chatReducer\n","import { combineReducers } from 'redux'\n\nimport themeReducer from './theme/theme.reducer'\nimport userReducer from './user/user.reducer'\nimport chatReducer from './chat/chat.reducer'\n\nconst rootReducer = combineReducers({\n  theme: themeReducer,\n  user: userReducer,\n  chat: chatReducer\n})\n\nexport default rootReducer\n","export const getChannelsWithStarred = (channels, starred) => {\n  if (starred !== undefined) {\n    channels.map(channel => {\n      if (starred.includes(channel.id)) {\n        channel.starred = true\n      } else {\n        channel.starred = false\n      }\n\n      return channel\n    })\n  }\n\n  return [...channels]\n}\n","import { takeLatest, all, call, select, put } from 'redux-saga/effects'\n\nimport ChatActionTypes from './chat.types'\n\nimport { getChannelsWithStarred } from './chat.utils'\n\nimport { selectChannels, selectCurrentChannel } from './chat.selectors'\nimport { setChannels, setCurrentChannel } from './chat.actions'\n\nfunction* updateChannelsAfterStarred({ payload }) {\n  const starred = payload\n  const channels = yield select(selectChannels)\n  const channelsWithStarred = getChannelsWithStarred(channels, starred)\n\n  // update channels to have starred property\n  yield put(setChannels(channelsWithStarred))\n  // update current channel to have starred property\n  let currentChannel = yield select(selectCurrentChannel)\n  if (starred) {\n    if (starred.includes(currentChannel.id)) {\n      currentChannel = { ...currentChannel, starred: true }\n    } else {\n      currentChannel = { ...currentChannel, starred: false }\n    }\n    yield put(setCurrentChannel(currentChannel))\n  }\n}\n\nexport function* onSetCurrentChannel() {\n  yield takeLatest(\n    ChatActionTypes.SET_STARRED_CHANNELS,\n    updateChannelsAfterStarred\n  )\n}\n\nexport function* chatSagas() {\n  yield all([call(onSetCurrentChannel)])\n}\n","import { all, call } from 'redux-saga/effects'\n\nimport { chatSagas } from './chat/chat.sagas'\n\nexport default function* rootSaga() {\n  yield all([call(chatSagas)])\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport logger from 'redux-logger'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from './root.reducer'\nimport rootSaga from './root.saga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst middlewares = [sagaMiddleware]\n\nif (process.env.NODE_ENV === 'development') middlewares.push(logger)\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import React from 'react'\nimport { connect, Provider } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './pages/app/app.component'\nimport * as serviceWorker from './serviceWorker'\nimport { auth } from './firebase/firebase.utils'\n\nimport CustomThemeProvider from './components/custom-theme-provider/custom-theme-provider.component'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from 'react-router-dom'\nimport RegisterPage from './pages/register/register.component'\nimport LoginPage from './pages/login/login.component'\n\nimport store from './redux/store'\n\nimport { setCurrentUser, clearCurrentUser } from './redux/user/user.actions'\nimport { selectUserIsLoading } from './redux/user/user.selectors'\n\nimport Spinner from './components/spinner/spinner.component'\n\nclass Root extends React.Component {\n  unsubscribeFromAuth = null\n\n  componentDidMount() {\n    const { history, setCurrentUser, clearCurrentUser } = this.props\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(user => {\n      if (user) {\n        setCurrentUser(user)\n        history.push('/')\n      } else {\n        history.push('/login')\n        clearCurrentUser()\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth()\n  }\n\n  render() {\n    const { isLoading } = this.props\n\n    return isLoading ? (\n      <Spinner />\n    ) : (\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route exact path=\"/register\" component={RegisterPage} />\n        <Route exact path=\"/login\" component={LoginPage} />\n      </Switch>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectUserIsLoading\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)),\n  clearCurrentUser: () => dispatch(clearCurrentUser())\n})\n\nconst RootWithRouter = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Root)\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <CustomThemeProvider>\n        <Router basename=\"/\">\n          <RootWithRouter />\n        </Router>\n      </CustomThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}